# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# programs to run for unit etc. testing
# prefer alphabetical order, except for core tests others depend upon
# If compare doesn't function 99 % of other tests will fail anyways
VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@WANT_COMPARE_TRUE@am__append_1 = compare-functionality.sh
@WANT_COMPOSE_TRUE@am__append_2 = compose-functionality.sh
@WANT_CONCATENATE_TRUE@am__append_3 = concatenate-functionality.sh
@WANT_CONJUNCT_TRUE@am__append_4 = conjunct-functionality.sh
@WANT_DETERMINIZE_TRUE@am__append_5 = determinize-functionality.sh
@WANT_DISJUNCT_TRUE@am__append_6 = disjunct-functionality.sh
@WANT_FORMAT_TRUE@am__append_7 = format-functionality.sh
@WANT_FST2STRINGS_TRUE@am__append_8 = fst2strings-functionality.sh
@WANT_FST2TXT_TRUE@am__append_9 = fst2txt-functionality.sh
@WANT_HEAD_TRUE@am__append_10 = head-functionality.sh
@WANT_INVERT_TRUE@am__append_11 = invert-functionality.sh
@WANT_LOOKUP_TRUE@am__append_12 = lookup-functionality.sh
@WANT_OPTIMIZED_LOOKUP_TRUE@am__append_13 = optimized-lookup-functionality.sh
@WANT_MINIMIZE_TRUE@am__append_14 = minimize-functionality.sh
@WANT_PMATCH_TRUE@am__append_15 = pmatch2fst-functionality.sh \
@WANT_PMATCH_TRUE@	pmatch-functionality.sh
@WANT_PROJECT_TRUE@am__append_16 = project-functionality.sh
@WANT_PRUNE_ALPHABET_TRUE@am__append_17 = prune-alphabet-functionality.sh
@WANT_REGEXP2FST_TRUE@am__append_18 = regexp2fst-functionality.sh
@WANT_REMOVE_EPSILONS_TRUE@am__append_19 = remove-epsilons-functionality.sh
@WANT_REPEAT_TRUE@am__append_20 = repeat-functionality.sh
@WANT_REVERSE_TRUE@am__append_21 = reverse-functionality.sh
@WANT_REWEIGHT_TRUE@am__append_22 = reweight-functionality.sh
@WANT_SPLIT_TRUE@am__append_23 = split-functionality.sh
@WANT_STRINGS2FST_TRUE@am__append_24 = strings2fst-functionality.sh
@WANT_SUBSTITUTE_TRUE@am__append_25 = substitute-functionality.sh
@WANT_SUBTRACT_TRUE@am__append_26 = subtract-functionality.sh
@WANT_SUMMARIZE_TRUE@am__append_27 = summarize-functionality.sh
@WANT_COMPARE_TRUE@@WANT_COMPOSE_TRUE@@WANT_CONCATENATE_TRUE@@WANT_CONJUNCT_TRUE@@WANT_DISJUNCT_TRUE@@WANT_FORMAT_TRUE@@WANT_MINIMIZE_TRUE@@WANT_REGEXP2FST_TRUE@@WANT_STRINGS2FST_TRUE@@WANT_SUBTRACT_TRUE@am__append_28 = symbol-harmonization-functionality.sh
@WANT_TAIL_TRUE@am__append_29 = tail-functionality.sh
@WANT_TXT2FST_TRUE@am__append_30 = txt2fst-functionality.sh
@WANT_LEXC_WRAPPER_TRUE@am__append_31 = lexc-wrapper-functionality.sh
@WANT_LEXC_TRUE@am__append_32 = lexc-compiler-functionality.sh
@WANT_CALCULATE_TRUE@am__append_33 = calculate-functionality.sh
@WANT_SHUFFLE_TRUE@am__append_34 = shuffle-functionality.sh
@WANT_PROC_TRUE@am__append_35 = proc-functionality.sh
subdir = test/tools
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/libhfst/src/hfst.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GETOPT = @GETOPT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CPPFLAGS = @GLIB_CPPFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBHFST_EXTENSION = @LIBHFST_EXTENSION@
LIBHFST_MAJOR = @LIBHFST_MAJOR@
LIBHFST_MINOR = @LIBHFST_MINOR@
LIBHFST_NAME = @LIBHFST_NAME@
LIBHFST_VERSION = @LIBHFST_VERSION@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# test fsmbook tests after establishing that simple tools work
SUBDIRS = . fsmbook-tests
@WANT_STRESSTESTS_TRUE@STRESSES = lexc2fst-stress.sh lookup-stress.sh proc-stress.sh valgrind.sh
TESTS = hfst-check-version.sh hfst-check-help.sh \
	hfst-check-environment.sh empty-input.sh \
	permutate-file-params.sh $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	$(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13) $(am__append_14) \
	$(am__append_15) $(am__append_16) $(am__append_17) \
	$(am__append_18) $(am__append_19) $(am__append_20) \
	$(am__append_21) $(am__append_22) $(am__append_23) \
	$(am__append_24) $(am__append_25) $(am__append_26) \
	$(am__append_27) $(am__append_28) $(am__append_29) \
	$(am__append_30) $(am__append_31) $(am__append_32) \
	$(am__append_33) $(am__append_34) $(am__append_35) $(STRESSES)

# XFAIL_TESTS=incompatible-formats.sh latin-1-strings.sh
DEFAULT_CHECKS = 0to3cats.hfst 2to4cats.hfst 4cats.hfst 4toINFcats.hfst \
		   cat2cat_or_CAT_uppercased.hfst cat2CAT_uppercased.hfst cat2dog.hfst \
		   cat+dog.hfst catdog.hfst cat_or_dog.hfst cat.hfst \
		   CAT_uppercased2cat.hfst CAT_uppercased.hfst cat_weight_final.hfst \
		   cat_weight_initial.hfst cat_weight_middle.hfst dog2cat.hfst \
		   dog.hfst infinitely_ambiguous.hfst infinitely_ambiguous_with_flags.hfst unification_flags.hfst unification_flags_fail.hfst non_minimal.hfst rule1.hfst \
		   rule2.hfst summarize_test1.hfst summarize_test2.hfst tac.hfst \
		   epsilon.hfst another_epsilon.hfst epsilon2cat.hfst cat2epsilon.hfst \
		   unknown-star.hfst identity-star.hfst unknown2a.hfst identity.hfst \
		   heavycat.hfst abid.hfst unk2unk.hfst unk_or_id_star.hfst a2b.hfst \
		   a2b_complement.hfst a2b_input_projection_complement.hfst empty.hfst \
		   walk_or_dog.hfst \
		   ab.hfst bc.hfst id.hfst aid.hfst idb.hfst \
		   ab_shuffle_bc.hfst id_shuffle_id.hfst aid_shuffle_idb.hfst \
		   prunable_alphabet.hfst non_prunable_alphabet_1.hfst non_prunable_alphabet_2.hfst id.hfst \
		   a2a_or_a2b_or_a2unk.hfst a2b_or_b2b_or_unk2b.hfst unk2unk_or_id.hfst \
		   a_or_id.hfst id_star_a_b_c.hfst pmatch_endtag.pmatch

OL_CHECKS = cat2dog.hfstol cat2dog.genhfstol cat_weight_final.hfstol \
			proc-caps.hfstol proc-caps.genhfstol \
			compounds.hfstol compounds2.hfstol

@WANT_SFST_TRUE@SFST_CHECKS = 0to3cats.sfst 2to4cats.sfst 4cats.sfst\
@WANT_SFST_TRUE@			4toINFcats.sfst cat2cat_or_CAT_uppercased.sfst \
@WANT_SFST_TRUE@			cat2CAT_uppercased.sfst cat2dog.sfst \
@WANT_SFST_TRUE@			cat+dog.sfst catdog.sfst cat_or_dog.sfst \
@WANT_SFST_TRUE@			cat.sfst CAT_uppercased2cat.sfst CAT_uppercased.sfst\
@WANT_SFST_TRUE@			cat_weight_final.sfst cat_weight_initial.sfst \
@WANT_SFST_TRUE@			cat_weight_middle.sfst dog2cat.sfst dog.sfst \
@WANT_SFST_TRUE@			infinitely_ambiguous.sfst infinitely_ambiguous_with_flags.sfst unification_flags.sfst unification_flags_fail.sfst non_minimal.sfst \
@WANT_SFST_TRUE@			rule1.sfst rule2.sfst summarize_test1.sfst \
@WANT_SFST_TRUE@			summarize_test2.sfst tac.sfst unknown2a.sfst\
@WANT_SFST_TRUE@			identity.sfst abid.sfst unk2unk.sfst unk_or_id_star.sfst \
@WANT_SFST_TRUE@			a2b.sfst a2b_complement.sfst a2b_input_projection_complement.sfst \
@WANT_SFST_TRUE@			empty.sfst \
@WANT_SFST_TRUE@			walk_or_dog.sfst ab.sfst bc.sfst id.sfst aid.sfst idb.sfst \
@WANT_SFST_TRUE@			ab_shuffle_bc.sfst id_shuffle_id.sfst aid_shuffle_idb.sfst \
@WANT_SFST_TRUE@			prunable_alphabet.sfst non_prunable_alphabet_1.sfst non_prunable_alphabet_2.sfst id.sfst \
@WANT_SFST_TRUE@			a2a_or_a2b_or_a2unk.sfst a2b_or_b2b_or_unk2b.sfst unk2unk_or_id.sfst \
@WANT_SFST_TRUE@			a_or_id.sfst id_star_a_b_c.sfst epsilon.sfst another_epsilon.sfst

@WANT_OPENFST_TRUE@OFST_CHECKS = 0to3cats.ofst \
@WANT_OPENFST_TRUE@			2to4cats.ofst 4cats.ofst 4toINFcats.ofst \
@WANT_OPENFST_TRUE@			cat2cat_or_CAT_uppercased.ofst cat2CAT_uppercased.ofst \
@WANT_OPENFST_TRUE@			cat2dog.ofst cat+dog.ofst catdog.ofst \
@WANT_OPENFST_TRUE@			cat_or_dog.ofst cat.ofst CAT_uppercased2cat.ofst \
@WANT_OPENFST_TRUE@			CAT_uppercased.ofst cat_weight_final.ofst \
@WANT_OPENFST_TRUE@			cat_weight_initial.ofst cat_weight_middle.ofst \
@WANT_OPENFST_TRUE@			dog2cat.ofst dog.ofst infinitely_ambiguous.ofst infinitely_ambiguous_with_flags.ofst unification_flags.ofst unification_flags_fail.ofst \
@WANT_OPENFST_TRUE@			non_minimal.ofst rule1.ofst rule2.ofst \
@WANT_OPENFST_TRUE@			summarize_test1.ofst summarize_test2.ofst tac.ofst\
@WANT_OPENFST_TRUE@			unknown2a.ofst identity.ofst \
@WANT_OPENFST_TRUE@			heavycat.hfst abid.ofst unk2unk.ofst \
@WANT_OPENFST_TRUE@			cat2dog_0.3.ofst cat2dog_0.5.ofst empty.ofst unk_or_id_star.ofst \
@WANT_OPENFST_TRUE@			a2b.ofst a2b_complement.ofst a2b_input_projection_complement.ofst \
@WANT_OPENFST_TRUE@			walk_or_dog.ofst ab.ofst bc.ofst id.ofst aid.ofst idb.ofst \
@WANT_OPENFST_TRUE@			ab_shuffle_bc.ofst id_shuffle_id.ofst aid_shuffle_idb.ofst \
@WANT_OPENFST_TRUE@			prunable_alphabet.ofst non_prunable_alphabet_1.ofst non_prunable_alphabet_2.ofst id.ofst \
@WANT_OPENFST_TRUE@			a2a_or_a2b_or_a2unk.ofst a2b_or_b2b_or_unk2b.ofst unk2unk_or_id.ofst \
@WANT_OPENFST_TRUE@			a_or_id.ofst id_star_a_b_c.ofst epsilon.ofst another_epsilon.ofst

@WANT_FOMA_TRUE@FOMA_CHECKS = 0to3cats.foma 2to4cats.foma 4cats.foma \
@WANT_FOMA_TRUE@			4toINFcats.foma cat2cat_or_CAT_uppercased.foma \
@WANT_FOMA_TRUE@			cat2CAT_uppercased.foma cat2dog.foma \
@WANT_FOMA_TRUE@			cat+dog.foma catdog.foma cat_or_dog.foma \
@WANT_FOMA_TRUE@			cat.foma CAT_uppercased2cat.foma \
@WANT_FOMA_TRUE@			CAT_uppercased.foma cat_weight_final.foma \
@WANT_FOMA_TRUE@			cat_weight_initial.foma cat_weight_middle.foma \
@WANT_FOMA_TRUE@			dog2cat.foma dog.foma infinitely_ambiguous.foma infinitely_ambiguous_with_flags.foma unification_flags.foma unification_flags_fail.foma \
@WANT_FOMA_TRUE@			non_minimal.foma rule1.foma rule2.foma \
@WANT_FOMA_TRUE@			summarize_test1.foma summarize_test2.foma tac.foma\
@WANT_FOMA_TRUE@			unknown2a.foma identity.foma abid.foma unk2unk.foma unk_or_id_star.foma \
@WANT_FOMA_TRUE@			a2b.foma a2b_complement.foma a2b_input_projection_complement.foma \
@WANT_FOMA_TRUE@			empty.foma \
@WANT_FOMA_TRUE@			walk_or_dog.foma ab.foma bc.foma id.foma aid.foma idb.foma \
@WANT_FOMA_TRUE@			ab_shuffle_bc.foma id_shuffle_id.foma aid_shuffle_idb.foma \
@WANT_FOMA_TRUE@			prunable_alphabet.foma non_prunable_alphabet_1.foma non_prunable_alphabet_2.foma id.foma \
@WANT_FOMA_TRUE@			a2a_or_a2b_or_a2unk.foma a2b_or_b2b_or_unk2b.foma unk2unk_or_id.foma \
@WANT_FOMA_TRUE@			a_or_id.foma id_star_a_b_c.foma epsilon.foma another_epsilon.foma

check_DATA = $(DEFAULT_CHECKS) $(SFST_CHECKS) $(OFST_CHECKS) $(FOMA_CHECKS) $(OL_CHECKS)
FST_TXTS = 0to3cats.txt 2to4cats.txt 4cats.txt 4toINFcats.txt \
		 cat2cat_or_CAT_uppercased.txt cat2CAT_uppercased.txt \
		 cat2epsilon.txt another_epsilon.txt cat2dog.txt \
		 cat+dog.txt catdog.txt cat_or_dog.txt cat.txt CAT_uppercased2cat.txt \
		 CAT_uppercased.txt cat_weight_final.txt cat_weight_initial.txt \
		 cat_weight_middle.txt dog2cat.txt dog.txt\
		 epsilon.txt epsilon2cat.txt infinitely_ambiguous.txt infinitely_ambiguous_with_flags.txt unification_flags.txt unification_flags_fail.txt \
		 non_minimal.txt rule1.txt rule2.txt summarize_test1.txt \
		 summarize_test2.txt tac.txt proc-caps.txt \
		 unknown-star.txt identity-star.txt unknown2a.txt identity.txt\
		 heavycat.txt abid.txt unk2unk.txt cat2dog_0.3.txt cat2dog_0.5.txt empty.txt unk_or_id_star.txt \
		 a2b.txt a2b_complement.txt a2b_input_projection_complement.txt \
		 walk_or_dog.txt ab.txt bc.txt id.txt aid.txt idb.txt \
		 ab_shuffle_bc.txt id_shuffle_id.txt aid_shuffle_idb.txt \
		 compounds.txt compounds2.txt \
		 id_shuffle_id.txt aid_shuffle_idb.txt \
		 prunable_alphabet.txt non_prunable_alphabet_1.txt non_prunable_alphabet_2.txt id.txt unk2unk_or_id.txt \
		 a2a_or_a2b_or_a2unk.txt a2b_or_b2b_or_unk2b.txt a_or_id.txt id_star_a_b_c.txt

FST_STRINGS = cat.strings proc-caps-in.strings proc-caps-gen.strings \
			proc-caps-out1.strings proc-caps-out2.strings \
			proc-caps-out3.strings proc-caps-out4.strings \
			proc-caps-out5.strings \
			proc-cat-out.strings proc-cat-weighted-out.strings \
			proc-compounds-out.strings proc-compounds.strings \
			proc-compounds2-out.strings proc-compounds2.strings \
			utf-8.strings latin-1.strings \
			cat2dog.strings heavycat.strings

FST_PAIRS = cat2dog.pairs
FST_PAIRSTRINGS = cat2dog.pairstring
FST_SPACESTRINGS = cat2dog.spaces
SUBSTITUTE_TXTS = cat2dog.substitute
XRE_TXTS = cats_and_dogs.xre cats_and_dogs_semicolon.xre \
	 at_file_quote.openfst-tropical.xre \
	 at_file_quote.sfst.xre at_file_quote.foma.xre \
	 left-arrow-with-semicolon-comment.xre \
	 left-arrow-with-semicolon-many-comments.xre

PMATCH_TXTS = pmatch_blanks.txt pmatch_endtag.txt
PMATCHSCRIPTS = pmatch-tests.sh pmatch-tester.sh
LEXC_TXTS = basic.cat-dog-bird.lexc basic.colons.lexc basic.comments.lexc \
		  basic.empty-sides.lexc basic.end.lexc basic.escapes.lexc \
		  basic.infostrings.lexc basic.initial-lexicon-empty.lexc \
		  basic.multichar-symbols.lexc basic.multichar-symbol-with-0.lexc \
		  basic.multi-entry-lines.lexc basic.multi-file-1.lexc \
		  basic.multi-file-2.lexc basic.multi-file-3.lexc \
		  basic.multichar-escaped-zero.lexc \
		  basic.no-newline-at-end.lexc basic.no-Root.lexc \
		  basic.punctuation.lexc basic.root-loop.lexc \
		  basic.spurious-lexicon.lexc basic.string-pairs.lexc \
		  basic.two-lexicons.lexc basic.UTF-8.lexc basic.zeros-epsilons.lexc \
		  cat.lexc hfst.weights.lexc stress.random-lexicons-100.lexc \
		  xfail.bogus.lexc xfail.ISO-8859-1.lexc xfail.lexicon-semicolon.lexc \
		  xre.any-variations.lexc xre.at-file.lexc \
		  xre.automatic-multichar-symbols.lexc xre.basic.lexc \
		  xre.definitions.lexc xre.months.lexc xre.nested-definitions.lexc \
		  xre.numeric-star.lexc xre.sharp.lexc xre.quotations.lexc \
		  xre.star-plus-optional.lexc basic.lowercase-lexicon-end.lexc \
		  basic.multichar-flag-with-zero.lexc basic.almost-reserved-words.lexc \
		  basic.regexps.lexc no-newline-before-sublexicon.lexc \
		  warn.sublexicon-mentioned-but-not-defined.lexc


#XFST_TXTS=cat-regex.xfst
ALL_SRCS = $(FST_TXTS) $(FST_STRINGS) $(FST_PAIRS) $(FST_PAIRSTRINGS) \
		$(FST_SPACESTRINGS) $(SUBSTITUTE_TXTS) $(XRE_TEXTS) \
		$(PMATCH_TXTS)

EXTRA_FILES = cat2dog.substitute cat.strings cat.txt cats_and_dogs.xre utf-8.strings latin-1.strings c_a_t.strings dos.strings not-contains-a.xre not-contains-a-comment-emptyline.xre parallel-left-arrow-multicom-emptyline.xre  parallel-left-arrow.xre cat.prolog
RESULT_FILES = basic.cat-dog-bird.lexc.flag.result \
basic.cat-dog-bird.lexc.result \
basic.colons.lexc.flag.result \
basic.colons.lexc.result \
basic.comments.lexc.flag.result \
basic.comments.lexc.result \
basic.empty-sides.lexc.flag.result \
basic.empty-sides.lexc.result \
basic.escapes.lexc.flag.result \
basic.escapes.lexc.result \
basic.infostrings.lexc.flag.result \
basic.infostrings.lexc.result \
basic.initial-lexicon-empty.lexc.flag.result \
basic.initial-lexicon-empty.lexc.result \
basic.lowercase-lexicon-end.lexc.flag.result \
basic.lowercase-lexicon-end.lexc.result \
basic.multichar-symbols.lexc.flag.result \
basic.multichar-symbols.lexc.result \
basic.multi-entry-lines.lexc.flag.result \
basic.multi-entry-lines.lexc.result \
basic.multichar-escaped-zero.lexc.flag.result \
basic.multichar-escaped-zero.lexc.result \
basic.no-newline-at-end.lexc.flag.result \
basic.no-newline-at-end.lexc.result \
basic.no-Root.lexc.flag.result \
basic.no-Root.lexc.result \
basic.punctuation.lexc.flag.result \
basic.punctuation.lexc.result \
basic.almost-reserved-words.lexc.flag.result \
basic.almost-reserved-words.lexc.result \
basic.regexps.lexc.flag.result \
basic.regexps.lexc.result \
basic.root-loop.lexc.flag.result \
basic.root-loop.lexc.result \
basic.spurious-lexicon.lexc.flag.result \
basic.spurious-lexicon.lexc.result \
basic.string-pairs.lexc.flag.result \
basic.string-pairs.lexc.result \
basic.two-lexicons.lexc.flag.result \
basic.two-lexicons.lexc.result \
basic.UTF-8.lexc.flag.result \
basic.UTF-8.lexc.result \
basic.zeros-epsilons.lexc.flag.result \
basic.zeros-epsilons.lexc.result \
hfst.weights.lexc.flag.result \
hfst.weights.lexc.result \
xre.any-variations.lexc.flag.result \
xre.any-variations.lexc.result \
xre.automatic-multichar-symbols.lexc.flag.result \
xre.automatic-multichar-symbols.lexc.result \
xre.basic.lexc.flag.result \
xre.basic.lexc.result \
xre.definitions.lexc.flag.result \
xre.definitions.lexc.result \
xre.months.lexc.flag.result \
xre.months.lexc.result \
xre.nested-definitions.lexc.flag.result \
xre.nested-definitions.lexc.result \
xre.numeric-star.lexc.flag.result \
xre.numeric-star.lexc.result \
xre.quotations.lexc.flag.result \
xre.quotations.lexc.result \
xre.sharp.lexc.flag.result \
xre.sharp.lexc.result \
xre.star-plus-optional.lexc.flag.result \
xre.star-plus-optional.lexc.result \
no-newline-before-sublexicon.lexc.flag.result \
no-newline-before-sublexicon.lexc.result \
warn.sublexicon-mentioned-but-not-defined.lexc.flag.result \
warn.sublexicon-mentioned-but-not-defined.lexc.result


# files needed for test programs
EXTRA_DIST = empty-file $(FST_TXTS) $(FST_STRINGS) $(FST_PAIRS) $(FST_PAIRSTRINGS) $(FST_SPACESTRINGS) $(SUBSTITUTE_TXTS) $(XRE_TXTS) $(XFST_TXTS) $(TESTS) $(EXTRA_FILES) $(LEXC_TXTS) $(PMATCH_TXTS) $(PMATCHSCRIPTS) script.xfst lexc2fst-stress.sh lookup-stress.sh proc-stress.sh valgrind.sh \
calculate-functionality.sh shuffle-functionality.sh $(RESULT_FILES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .foma .genhfstol .hfst .hfstol .ofst .pmatch .sfst .txt
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/tools/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/tools/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_DATA)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am clean clean-generic \
	clean-libtool clean-local ctags ctags-recursive distclean \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am


# this compilation is used by check target before running the tests
#%.hfst: %.txt
.txt.hfst:
	${top_builddir}/tools/src/hfst-txt2fst -e '@0@' $< > $@

#%.sfst: %.txt
.txt.sfst:
	${top_builddir}/tools/src/hfst-txt2fst -f sfst -e '@0@' $< > $@

#%.ofst: %.txt
.txt.ofst:
	${top_builddir}/tools/src/hfst-txt2fst -f openfst-tropical -e '@0@' $< > $@

#%.foma: %.txt
.txt.foma:
	${top_builddir}/tools/src/hfst-txt2fst -f foma -e '@0@' $< > $@

#%.hfstol: %.txt
.txt.hfstol:
	${top_builddir}/tools/src/hfst-txt2fst -e '@0@' -i $< | ${top_builddir}/tools/src/hfst-fst2fst -w -o $@

#%.genhfstol: %.txt
.txt.genhfstol:
	${top_builddir}/tools/src/hfst-txt2fst -e '@0@' -i $< | ${top_builddir}/tools/src/hfst-invert | ${top_builddir}/tools/src/hfst-fst2fst -w -o $@

.txt.pmatch:
	${top_builddir}/tools/src/hfst-pmatch2fst $< > $@

valgrind: $(CHECK_DATA)
	$(srcdir)/valgrind.sh $(srcdir)

clean-local:
	-rm -f $(check_DATA)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
