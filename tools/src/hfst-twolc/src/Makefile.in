# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = htwolcpre1$(EXEEXT) htwolcpre2$(EXEEXT) \
	htwolcpre3$(EXEEXT) hfst-twolc-system$(EXEEXT)
@WANT_MINGW_TRUE@am__append_1 = -I${top_srcdir}/back-ends/openfstwin/src/include \
@WANT_MINGW_TRUE@                 -I${top_srcdir}/back-ends/dlfcn -DWINDOWS

@WANT_MINGW_FALSE@am__append_2 = -I${top_srcdir}/back-ends/openfst/src/include
check_PROGRAMS = $(am__EXEEXT_1)
TESTS = $(am__EXEEXT_1)
subdir = tools/src/hfst-twolc/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	htwolcpre1.cc htwolcpre1.h htwolcpre2.cc htwolcpre2.h \
	htwolcpre3.cc htwolcpre3.h scanner1.cc scanner2.cc scanner3.cc
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/libhfst/src/hfst.hpp
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
am__EXEEXT_1 = string_manipulation$(EXEEXT) InputReader$(EXEEXT) \
	Alphabet$(EXEEXT) OtherSymbolTransducer$(EXEEXT) Rule$(EXEEXT) \
	LeftArrowRule$(EXEEXT) RightArrowRule$(EXEEXT) \
	RuleContainer$(EXEEXT) LeftArrowRuleContainer$(EXEEXT) \
	RightArrowRuleContainer$(EXEEXT) \
	ConflictResolvingLeftArrowRule$(EXEEXT) \
	ConflictResolvingRightArrowRule$(EXEEXT) TwolCGrammar$(EXEEXT) \
	LeftRestrictionArrowRule$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am_Alphabet_OBJECTS = Alphabet-Alphabet.$(OBJEXT) \
	Alphabet-OtherSymbolTransducer.$(OBJEXT)
Alphabet_OBJECTS = $(am_Alphabet_OBJECTS)
Alphabet_LDADD = $(LDADD)
Alphabet_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
Alphabet_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(Alphabet_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ConflictResolvingLeftArrowRule_OBJECTS = ConflictResolvingLeftArrowRule-OtherSymbolTransducer.$(OBJEXT) \
	ConflictResolvingLeftArrowRule-Rule.$(OBJEXT) \
	ConflictResolvingLeftArrowRule-RuleContainer.$(OBJEXT) \
	ConflictResolvingLeftArrowRule-string_manipulation.$(OBJEXT) \
	ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.$(OBJEXT) \
	ConflictResolvingLeftArrowRule-LeftArrowRule.$(OBJEXT)
ConflictResolvingLeftArrowRule_OBJECTS =  \
	$(am_ConflictResolvingLeftArrowRule_OBJECTS)
ConflictResolvingLeftArrowRule_LDADD = $(LDADD)
ConflictResolvingLeftArrowRule_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
ConflictResolvingLeftArrowRule_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_ConflictResolvingRightArrowRule_OBJECTS = ConflictResolvingRightArrowRule-OtherSymbolTransducer.$(OBJEXT) \
	ConflictResolvingRightArrowRule-Rule.$(OBJEXT) \
	ConflictResolvingRightArrowRule-RuleContainer.$(OBJEXT) \
	ConflictResolvingRightArrowRule-string_manipulation.$(OBJEXT) \
	ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.$(OBJEXT) \
	ConflictResolvingRightArrowRule-RightArrowRule.$(OBJEXT)
ConflictResolvingRightArrowRule_OBJECTS =  \
	$(am_ConflictResolvingRightArrowRule_OBJECTS)
ConflictResolvingRightArrowRule_LDADD = $(LDADD)
ConflictResolvingRightArrowRule_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
ConflictResolvingRightArrowRule_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_InputReader_OBJECTS = InputReader-InputReader.$(OBJEXT)
InputReader_OBJECTS = $(am_InputReader_OBJECTS)
InputReader_LDADD = $(LDADD)
InputReader_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
InputReader_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(InputReader_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_LeftArrowRule_OBJECTS =  \
	LeftArrowRule-OtherSymbolTransducer.$(OBJEXT) \
	LeftArrowRule-string_manipulation.$(OBJEXT) \
	LeftArrowRule-Rule.$(OBJEXT) \
	LeftArrowRule-LeftArrowRule.$(OBJEXT)
LeftArrowRule_OBJECTS = $(am_LeftArrowRule_OBJECTS)
LeftArrowRule_LDADD = $(LDADD)
LeftArrowRule_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
LeftArrowRule_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(LeftArrowRule_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_LeftArrowRuleContainer_OBJECTS =  \
	LeftArrowRuleContainer-OtherSymbolTransducer.$(OBJEXT) \
	LeftArrowRuleContainer-Rule.$(OBJEXT) \
	LeftArrowRuleContainer-RuleContainer.$(OBJEXT) \
	LeftArrowRuleContainer-string_manipulation.$(OBJEXT) \
	LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.$(OBJEXT) \
	LeftArrowRuleContainer-LeftArrowRuleContainer.$(OBJEXT) \
	LeftArrowRuleContainer-LeftArrowRule.$(OBJEXT)
LeftArrowRuleContainer_OBJECTS = $(am_LeftArrowRuleContainer_OBJECTS)
LeftArrowRuleContainer_LDADD = $(LDADD)
LeftArrowRuleContainer_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
LeftArrowRuleContainer_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_LeftRestrictionArrowRule_OBJECTS =  \
	LeftRestrictionArrowRule-OtherSymbolTransducer.$(OBJEXT) \
	LeftRestrictionArrowRule-string_manipulation.$(OBJEXT) \
	LeftRestrictionArrowRule-Rule.$(OBJEXT) \
	LeftRestrictionArrowRule-LeftArrowRule.$(OBJEXT) \
	LeftRestrictionArrowRule-LeftRestrictionArrowRule.$(OBJEXT)
LeftRestrictionArrowRule_OBJECTS =  \
	$(am_LeftRestrictionArrowRule_OBJECTS)
LeftRestrictionArrowRule_LDADD = $(LDADD)
LeftRestrictionArrowRule_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
LeftRestrictionArrowRule_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_OtherSymbolTransducer_OBJECTS =  \
	OtherSymbolTransducer-OtherSymbolTransducer.$(OBJEXT)
OtherSymbolTransducer_OBJECTS = $(am_OtherSymbolTransducer_OBJECTS)
OtherSymbolTransducer_LDADD = $(LDADD)
OtherSymbolTransducer_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
OtherSymbolTransducer_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(OtherSymbolTransducer_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_RightArrowRule_OBJECTS =  \
	RightArrowRule-OtherSymbolTransducer.$(OBJEXT) \
	RightArrowRule-string_manipulation.$(OBJEXT) \
	RightArrowRule-Rule.$(OBJEXT) \
	RightArrowRule-RightArrowRule.$(OBJEXT)
RightArrowRule_OBJECTS = $(am_RightArrowRule_OBJECTS)
RightArrowRule_LDADD = $(LDADD)
RightArrowRule_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
RightArrowRule_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(RightArrowRule_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_RightArrowRuleContainer_OBJECTS =  \
	RightArrowRuleContainer-OtherSymbolTransducer.$(OBJEXT) \
	RightArrowRuleContainer-Rule.$(OBJEXT) \
	RightArrowRuleContainer-RuleContainer.$(OBJEXT) \
	RightArrowRuleContainer-string_manipulation.$(OBJEXT) \
	RightArrowRuleContainer-ConflictResolvingRightArrowRule.$(OBJEXT) \
	RightArrowRuleContainer-RightArrowRuleContainer.$(OBJEXT) \
	RightArrowRuleContainer-RightArrowRule.$(OBJEXT)
RightArrowRuleContainer_OBJECTS =  \
	$(am_RightArrowRuleContainer_OBJECTS)
RightArrowRuleContainer_LDADD = $(LDADD)
RightArrowRuleContainer_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
RightArrowRuleContainer_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_Rule_OBJECTS = Rule-OtherSymbolTransducer.$(OBJEXT) \
	Rule-Rule.$(OBJEXT) Rule-string_manipulation.$(OBJEXT)
Rule_OBJECTS = $(am_Rule_OBJECTS)
Rule_LDADD = $(LDADD)
Rule_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
Rule_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(Rule_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_RuleContainer_OBJECTS =  \
	RuleContainer-OtherSymbolTransducer.$(OBJEXT) \
	RuleContainer-Rule.$(OBJEXT) \
	RuleContainer-RuleContainer.$(OBJEXT) \
	RuleContainer-string_manipulation.$(OBJEXT)
RuleContainer_OBJECTS = $(am_RuleContainer_OBJECTS)
RuleContainer_LDADD = $(LDADD)
RuleContainer_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
RuleContainer_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(RuleContainer_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_TwolCGrammar_OBJECTS =  \
	TwolCGrammar-OtherSymbolTransducer.$(OBJEXT) \
	TwolCGrammar-Rule.$(OBJEXT) \
	TwolCGrammar-RuleContainer.$(OBJEXT) \
	TwolCGrammar-string_manipulation.$(OBJEXT) \
	TwolCGrammar-ConflictResolvingLeftArrowRule.$(OBJEXT) \
	TwolCGrammar-LeftArrowRule.$(OBJEXT) \
	TwolCGrammar-ConflictResolvingRightArrowRule.$(OBJEXT) \
	TwolCGrammar-RightArrowRule.$(OBJEXT) \
	TwolCGrammar-RightArrowRuleContainer.$(OBJEXT) \
	TwolCGrammar-LeftArrowRuleContainer.$(OBJEXT) \
	TwolCGrammar-TwolCGrammar.$(OBJEXT) \
	TwolCGrammar-LeftRestrictionArrowRule.$(OBJEXT) \
	TwolCGrammar-Alphabet.$(OBJEXT)
TwolCGrammar_OBJECTS = $(am_TwolCGrammar_OBJECTS)
TwolCGrammar_LDADD = $(LDADD)
TwolCGrammar_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
TwolCGrammar_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(TwolCGrammar_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_hfst_twolc_system_OBJECTS = hfst-twolc-system.$(OBJEXT)
hfst_twolc_system_OBJECTS = $(am_hfst_twolc_system_OBJECTS)
hfst_twolc_system_LDADD = $(LDADD)
hfst_twolc_system_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
am_htwolcpre1_OBJECTS = htwolcpre1.$(OBJEXT) scanner1.$(OBJEXT) \
	CommandLine.$(OBJEXT) InputReader.$(OBJEXT) \
	string_manipulation.$(OBJEXT) VariableValues.$(OBJEXT) \
	RuleVariablesConstIterator.$(OBJEXT) RuleVariables.$(OBJEXT) \
	RuleSymbolVector.$(OBJEXT)
htwolcpre1_OBJECTS = $(am_htwolcpre1_OBJECTS)
htwolcpre1_LDADD = $(LDADD)
htwolcpre1_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
am_htwolcpre2_OBJECTS = htwolcpre2.$(OBJEXT) scanner2.$(OBJEXT) \
	CommandLine.$(OBJEXT) InputReader.$(OBJEXT)
htwolcpre2_OBJECTS = $(am_htwolcpre2_OBJECTS)
htwolcpre2_LDADD = $(LDADD)
htwolcpre2_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
am_htwolcpre3_OBJECTS = htwolcpre3.$(OBJEXT) scanner3.$(OBJEXT) \
	CommandLine.$(OBJEXT) InputReader.$(OBJEXT) \
	string_manipulation.$(OBJEXT) Alphabet.$(OBJEXT) \
	ConflictResolvingLeftArrowRule.$(OBJEXT) \
	ConflictResolvingRightArrowRule.$(OBJEXT) \
	LeftArrowRule.$(OBJEXT) LeftArrowRuleContainer.$(OBJEXT) \
	LeftRestrictionArrowRule.$(OBJEXT) \
	OtherSymbolTransducer.$(OBJEXT) RightArrowRule.$(OBJEXT) \
	RightArrowRuleContainer.$(OBJEXT) Rule.$(OBJEXT) \
	RuleContainer.$(OBJEXT) TwolCGrammar.$(OBJEXT)
htwolcpre3_OBJECTS = $(am_htwolcpre3_OBJECTS)
htwolcpre3_LDADD = $(LDADD)
htwolcpre3_DEPENDENCIES = $(top_builddir)/libhfst/src/libhfst.la
am_string_manipulation_OBJECTS =  \
	string_manipulation-string_manipulation.$(OBJEXT)
string_manipulation_OBJECTS = $(am_string_manipulation_OBJECTS)
string_manipulation_LDADD = $(LDADD)
string_manipulation_DEPENDENCIES =  \
	$(top_builddir)/libhfst/src/libhfst.la
string_manipulation_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(string_manipulation_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/libhfst/src
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
YLWRAP = $(top_srcdir)/build-aux/ylwrap
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(Alphabet_SOURCES) \
	$(ConflictResolvingLeftArrowRule_SOURCES) \
	$(ConflictResolvingRightArrowRule_SOURCES) \
	$(InputReader_SOURCES) $(LeftArrowRule_SOURCES) \
	$(LeftArrowRuleContainer_SOURCES) \
	$(LeftRestrictionArrowRule_SOURCES) \
	$(OtherSymbolTransducer_SOURCES) $(RightArrowRule_SOURCES) \
	$(RightArrowRuleContainer_SOURCES) $(Rule_SOURCES) \
	$(RuleContainer_SOURCES) $(TwolCGrammar_SOURCES) \
	$(hfst_twolc_system_SOURCES) $(htwolcpre1_SOURCES) \
	$(htwolcpre2_SOURCES) $(htwolcpre3_SOURCES) \
	$(string_manipulation_SOURCES)
DIST_SOURCES = $(Alphabet_SOURCES) \
	$(ConflictResolvingLeftArrowRule_SOURCES) \
	$(ConflictResolvingRightArrowRule_SOURCES) \
	$(InputReader_SOURCES) $(LeftArrowRule_SOURCES) \
	$(LeftArrowRuleContainer_SOURCES) \
	$(LeftRestrictionArrowRule_SOURCES) \
	$(OtherSymbolTransducer_SOURCES) $(RightArrowRule_SOURCES) \
	$(RightArrowRuleContainer_SOURCES) $(Rule_SOURCES) \
	$(RuleContainer_SOURCES) $(TwolCGrammar_SOURCES) \
	$(hfst_twolc_system_SOURCES) $(htwolcpre1_SOURCES) \
	$(htwolcpre2_SOURCES) $(htwolcpre3_SOURCES) \
	$(string_manipulation_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GETOPT = @GETOPT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_CPPFLAGS = @GLIB_CPPFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBHFST_EXTENSION = @LIBHFST_EXTENSION@
LIBHFST_MAJOR = @LIBHFST_MAJOR@
LIBHFST_MINOR = @LIBHFST_MINOR@
LIBHFST_NAME = @LIBHFST_NAME@
LIBHFST_VERSION = @LIBHFST_VERSION@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_YFLAGS = -d -o y.tab.c
AM_CXXFLAGS = -Wcast-qual -Wno-deprecated -Wfatal-errors
bin_SCRIPTS = hfst-twolc$(EXEEXT) hfst-twolc-loc$(EXEEXT)
EXTRA_DIST = hfst-twolc.sh hfst-twolc.bat common_globals.h \
	htwolcpre1.hh htwolcpre2.hh htwolcpre3.hh htwolcpre1.cc \
	htwolcpre2.cc htwolcpre3.cc scanner1.cc scanner2.cc \
	scanner3.cc
IO_SRC = $(srcdir)/io_src
STRING_SRC = $(srcdir)/string_src
VARIABLE_SRC = $(srcdir)/variable_src
RULE_SRC = $(srcdir)/rule_src
ALPHABET_SRC = $(srcdir)/alphabet_src
CL_SRC = $(srcdir)/commandline_src
AM_CPPFLAGS = -I${top_srcdir}/libhfst/src \
	-I${top_srcdir}/back-ends/foma -I${top_srcdir}/back-ends \
	$(am__append_1) $(am__append_2)
LDADD = $(top_builddir)/libhfst/src/libhfst.la

# the preprocessor scripts do not support options per se, so we whitelist
# them here
AM_INSTALLCHECK_STD_OPTIONS_EXEMPT = htwolcpre1 htwolcpre2 htwolcpre3 \
				hfst-twolc$(EXEEXT) hfst-twolc-loc$(EXEEXT) hfst-twolc-system$(EXEEXT)

htwolcpre1_SOURCES = htwolcpre1.yy scanner1.ll HfstTwolcDefs.h \
		   $(CL_SRC)/CommandLine.h $(CL_SRC)/CommandLine.cc \
	           $(IO_SRC)/input_defs.h grammar_defs.h \
                   $(IO_SRC)/InputReader.h $(IO_SRC)/InputReader.cc \
	           $(STRING_SRC)/string_manipulation.cc \
		   $(STRING_SRC)/string_manipulation.h \
		   $(VARIABLE_SRC)/VariableValues.h \
		   $(VARIABLE_SRC)/VariableValues.cc \
		   $(VARIABLE_SRC)/VariableValueIterator.h \
		   $(VARIABLE_SRC)/VariableDefs.h \
		   $(VARIABLE_SRC)/VariableContainerBase.h \
		   $(VARIABLE_SRC)/VariableContainer.h \
		   $(VARIABLE_SRC)/VariableBlockContainer.h \
		   $(VARIABLE_SRC)/VariableBlock.h \
		   $(VARIABLE_SRC)/RuleVariablesConstIterator.cc \
		   $(VARIABLE_SRC)/RuleVariablesConstIterator.h \
		   $(VARIABLE_SRC)/RuleVariables.cc \
		   $(VARIABLE_SRC)/RuleVariables.h \
		   $(VARIABLE_SRC)/RuleSymbolVector.cc \
		   $(VARIABLE_SRC)/RuleSymbolVector.h \
		   $(VARIABLE_SRC)/MatchedConstContainerIterator.h \
		   $(VARIABLE_SRC)/MixedConstContainerIterator.h \
		   $(VARIABLE_SRC)/ConstContainerIterator.h

htwolcpre2_SOURCES = htwolcpre2.yy scanner2.ll HfstTwolcDefs.h \
		   $(CL_SRC)/CommandLine.h $(CL_SRC)/CommandLine.cc \
	           $(IO_SRC)/input_defs.h grammar_defs.h \
                   $(IO_SRC)/InputReader.h $(IO_SRC)/InputReader.cc

htwolcpre3_SOURCES = htwolcpre3.yy scanner3.ll HfstTwolcDefs.h \
		   $(CL_SRC)/CommandLine.h $(CL_SRC)/CommandLine.cc \
	           $(IO_SRC)/input_defs.h grammar_defs.h \
                   $(IO_SRC)/InputReader.cc $(IO_SRC)/InputReader.h \
	           $(STRING_SRC)/string_manipulation.cc \
		   $(STRING_SRC)/string_manipulation.h \
		   $(ALPHABET_SRC)/Alphabet.cc $(ALPHABET_SRC)/Alphabet.h \
		   $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc \
		   $(RULE_SRC)/ConflictResolvingLeftArrowRule.h \
		   $(RULE_SRC)/ConflictResolvingRightArrowRule.cc \
		   $(RULE_SRC)/ConflictResolvingRightArrowRule.h \
		   $(RULE_SRC)/LeftArrowRule.cc \
		   $(RULE_SRC)/LeftArrowRule.h \
		   $(RULE_SRC)/LeftArrowRuleContainer.cc \
		   $(RULE_SRC)/LeftArrowRuleContainer.h \
		   $(RULE_SRC)/LeftRestrictionArrowRule.cc \
		   $(RULE_SRC)/LeftRestrictionArrowRule.h \
		   $(RULE_SRC)/OtherSymbolTransducer.cc \
		   $(RULE_SRC)/OtherSymbolTransducer.h \
		   $(RULE_SRC)/RightArrowRule.cc \
		   $(RULE_SRC)/RightArrowRule.h \
		   $(RULE_SRC)/RightArrowRuleContainer.cc \
		   $(RULE_SRC)/RightArrowRuleContainer.h \
		   $(RULE_SRC)/Rule.cc \
		   $(RULE_SRC)/Rule.h \
		   $(RULE_SRC)/RuleContainer.cc \
		   $(RULE_SRC)/RuleContainer.h \
		   $(RULE_SRC)/TwolCGrammar.cc \
		   $(RULE_SRC)/TwolCGrammar.h

hfst_twolc_system_SOURCES = hfst-twolc-system.cc

# some systems might require all these
BUILT_SOURCES = htwolcpre1.cc htwolcpre2.cc htwolcpre3.cc
CLEANFILES = htwolcpre1.hh htwolcpre2.hh htwolcpre3.hh htwolcpre1.cc \
	htwolcpre2.cc htwolcpre3.cc htwolcpre1.hh htwolcpre2.hh \
	htwolcpre3.hh
HFST_TWOLC_TESTS = string_manipulation InputReader Alphabet \
                 OtherSymbolTransducer Rule LeftArrowRule RightArrowRule \
                 RuleContainer LeftArrowRuleContainer RightArrowRuleContainer \
                 ConflictResolvingLeftArrowRule \
                 ConflictResolvingRightArrowRule TwolCGrammar \
                 LeftRestrictionArrowRule

string_manipulation_SOURCES = $(STRING_SRC)/string_manipulation.cc
string_manipulation_CXXFLAGS = -DSTRING_MANIPULATION_TEST
InputReader_SOURCES = $(IO_SRC)/InputReader.cc
InputReader_CXXFLAGS = -DINPUT_READER_TEST
Alphabet_SOURCES = $(ALPHABET_SRC)/Alphabet.cc \
                 $(RULE_SRC)/OtherSymbolTransducer.cc

Alphabet_CXXFLAGS = -DTEST_ALPHABET
OtherSymbolTransducer_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc
OtherSymbolTransducer_CXXFLAGS = -DTEST_OTHER_SYMBOL_TRANSDUCER
Rule_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc $(RULE_SRC)/Rule.cc \
             $(STRING_SRC)/string_manipulation.cc

Rule_CXXFLAGS = -DTEST_RULE
LeftArrowRule_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                      $(STRING_SRC)/string_manipulation.cc \
                      $(RULE_SRC)/Rule.cc $(RULE_SRC)/LeftArrowRule.cc	

LeftArrowRule_CXXFLAGS = -DTEST_LEFT_ARROW_RULE
LeftRestrictionArrowRule_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                      $(STRING_SRC)/string_manipulation.cc \
                      $(RULE_SRC)/Rule.cc $(RULE_SRC)/LeftArrowRule.cc \
                      $(RULE_SRC)/LeftRestrictionArrowRule.cc

LeftRestrictionArrowRule_CXXFLAGS = -DTEST_LEFT_RESTRICTION_ARROW_RULE
RightArrowRule_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                       $(STRING_SRC)/string_manipulation.cc \
                       $(RULE_SRC)/Rule.cc $(RULE_SRC)/RightArrowRule.cc

RightArrowRule_CXXFLAGS = -DTEST_RIGHT_ARROW_RULE
RuleContainer_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                      $(RULE_SRC)/Rule.cc $(RULE_SRC)/RuleContainer.cc \
                      $(STRING_SRC)/string_manipulation.cc

RuleContainer_CXXFLAGS = -DTEST_RULE_CONTAINER
LeftArrowRuleContainer_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                               $(RULE_SRC)/Rule.cc \
                               $(RULE_SRC)/RuleContainer.cc \
                               $(STRING_SRC)/string_manipulation.cc \
                               $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc \
                               $(RULE_SRC)/LeftArrowRuleContainer.cc \
                               $(RULE_SRC)/LeftArrowRule.cc

LeftArrowRuleContainer_CXXFLAGS = -DTEST_LEFT_ARROW_RULE_CONTAINER
RightArrowRuleContainer_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                                $(RULE_SRC)/Rule.cc \
                                $(RULE_SRC)/RuleContainer.cc \
                                $(STRING_SRC)/string_manipulation.cc \
                                $(RULE_SRC)/ConflictResolvingRightArrowRule.cc\
                                $(RULE_SRC)/RightArrowRuleContainer.cc \
                                $(RULE_SRC)/RightArrowRule.cc

RightArrowRuleContainer_CXXFLAGS = -DTEST_RIGHT_ARROW_RULE_CONTAINER
ConflictResolvingLeftArrowRule_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                                        $(RULE_SRC)/Rule.cc \
                                        $(RULE_SRC)/RuleContainer.cc \
                                        $(STRING_SRC)/string_manipulation.cc \
                                $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc\
                                        $(RULE_SRC)/LeftArrowRule.cc

ConflictResolvingLeftArrowRule_CXXFLAGS = \
-DTEST_CONFLICT_RESOLVING_LEFT_ARROW_RULE

ConflictResolvingRightArrowRule_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                                        $(RULE_SRC)/Rule.cc \
                                        $(RULE_SRC)/RuleContainer.cc \
                                        $(STRING_SRC)/string_manipulation.cc \
                                $(RULE_SRC)/ConflictResolvingRightArrowRule.cc\
                                        $(RULE_SRC)/RightArrowRule.cc

ConflictResolvingRightArrowRule_CXXFLAGS = \
-DTEST_CONFLICT_RESOLVING_RIGHT_ARROW_RULE

TwolCGrammar_SOURCES = $(RULE_SRC)/OtherSymbolTransducer.cc \
                     $(RULE_SRC)/Rule.cc $(RULE_SRC)/RuleContainer.cc \
                     $(STRING_SRC)/string_manipulation.cc \
                     $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc \
                     $(RULE_SRC)/LeftArrowRule.cc \
                     $(RULE_SRC)/ConflictResolvingRightArrowRule.cc\
                     $(RULE_SRC)/RightArrowRule.cc \
                     $(RULE_SRC)/RightArrowRuleContainer.cc \
                     $(RULE_SRC)/LeftArrowRuleContainer.cc \
                     $(RULE_SRC)/TwolCGrammar.cc \
                     $(RULE_SRC)/LeftRestrictionArrowRule.cc \
                     $(ALPHABET_SRC)/Alphabet.cc

TwolCGrammar_CXXFLAGS = -DTEST_TWOL_C_GRAMMAR
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .ll .lo .o .obj .yy
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tools/src/hfst-twolc/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tools/src/hfst-twolc/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

installcheck-binPROGRAMS: $(bin_PROGRAMS)
	bad=0; pid=$$$$; list="$(bin_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
Alphabet$(EXEEXT): $(Alphabet_OBJECTS) $(Alphabet_DEPENDENCIES) $(EXTRA_Alphabet_DEPENDENCIES) 
	@rm -f Alphabet$(EXEEXT)
	$(Alphabet_LINK) $(Alphabet_OBJECTS) $(Alphabet_LDADD) $(LIBS)
ConflictResolvingLeftArrowRule$(EXEEXT): $(ConflictResolvingLeftArrowRule_OBJECTS) $(ConflictResolvingLeftArrowRule_DEPENDENCIES) $(EXTRA_ConflictResolvingLeftArrowRule_DEPENDENCIES) 
	@rm -f ConflictResolvingLeftArrowRule$(EXEEXT)
	$(ConflictResolvingLeftArrowRule_LINK) $(ConflictResolvingLeftArrowRule_OBJECTS) $(ConflictResolvingLeftArrowRule_LDADD) $(LIBS)
ConflictResolvingRightArrowRule$(EXEEXT): $(ConflictResolvingRightArrowRule_OBJECTS) $(ConflictResolvingRightArrowRule_DEPENDENCIES) $(EXTRA_ConflictResolvingRightArrowRule_DEPENDENCIES) 
	@rm -f ConflictResolvingRightArrowRule$(EXEEXT)
	$(ConflictResolvingRightArrowRule_LINK) $(ConflictResolvingRightArrowRule_OBJECTS) $(ConflictResolvingRightArrowRule_LDADD) $(LIBS)
InputReader$(EXEEXT): $(InputReader_OBJECTS) $(InputReader_DEPENDENCIES) $(EXTRA_InputReader_DEPENDENCIES) 
	@rm -f InputReader$(EXEEXT)
	$(InputReader_LINK) $(InputReader_OBJECTS) $(InputReader_LDADD) $(LIBS)
LeftArrowRule$(EXEEXT): $(LeftArrowRule_OBJECTS) $(LeftArrowRule_DEPENDENCIES) $(EXTRA_LeftArrowRule_DEPENDENCIES) 
	@rm -f LeftArrowRule$(EXEEXT)
	$(LeftArrowRule_LINK) $(LeftArrowRule_OBJECTS) $(LeftArrowRule_LDADD) $(LIBS)
LeftArrowRuleContainer$(EXEEXT): $(LeftArrowRuleContainer_OBJECTS) $(LeftArrowRuleContainer_DEPENDENCIES) $(EXTRA_LeftArrowRuleContainer_DEPENDENCIES) 
	@rm -f LeftArrowRuleContainer$(EXEEXT)
	$(LeftArrowRuleContainer_LINK) $(LeftArrowRuleContainer_OBJECTS) $(LeftArrowRuleContainer_LDADD) $(LIBS)
LeftRestrictionArrowRule$(EXEEXT): $(LeftRestrictionArrowRule_OBJECTS) $(LeftRestrictionArrowRule_DEPENDENCIES) $(EXTRA_LeftRestrictionArrowRule_DEPENDENCIES) 
	@rm -f LeftRestrictionArrowRule$(EXEEXT)
	$(LeftRestrictionArrowRule_LINK) $(LeftRestrictionArrowRule_OBJECTS) $(LeftRestrictionArrowRule_LDADD) $(LIBS)
OtherSymbolTransducer$(EXEEXT): $(OtherSymbolTransducer_OBJECTS) $(OtherSymbolTransducer_DEPENDENCIES) $(EXTRA_OtherSymbolTransducer_DEPENDENCIES) 
	@rm -f OtherSymbolTransducer$(EXEEXT)
	$(OtherSymbolTransducer_LINK) $(OtherSymbolTransducer_OBJECTS) $(OtherSymbolTransducer_LDADD) $(LIBS)
RightArrowRule$(EXEEXT): $(RightArrowRule_OBJECTS) $(RightArrowRule_DEPENDENCIES) $(EXTRA_RightArrowRule_DEPENDENCIES) 
	@rm -f RightArrowRule$(EXEEXT)
	$(RightArrowRule_LINK) $(RightArrowRule_OBJECTS) $(RightArrowRule_LDADD) $(LIBS)
RightArrowRuleContainer$(EXEEXT): $(RightArrowRuleContainer_OBJECTS) $(RightArrowRuleContainer_DEPENDENCIES) $(EXTRA_RightArrowRuleContainer_DEPENDENCIES) 
	@rm -f RightArrowRuleContainer$(EXEEXT)
	$(RightArrowRuleContainer_LINK) $(RightArrowRuleContainer_OBJECTS) $(RightArrowRuleContainer_LDADD) $(LIBS)
Rule$(EXEEXT): $(Rule_OBJECTS) $(Rule_DEPENDENCIES) $(EXTRA_Rule_DEPENDENCIES) 
	@rm -f Rule$(EXEEXT)
	$(Rule_LINK) $(Rule_OBJECTS) $(Rule_LDADD) $(LIBS)
RuleContainer$(EXEEXT): $(RuleContainer_OBJECTS) $(RuleContainer_DEPENDENCIES) $(EXTRA_RuleContainer_DEPENDENCIES) 
	@rm -f RuleContainer$(EXEEXT)
	$(RuleContainer_LINK) $(RuleContainer_OBJECTS) $(RuleContainer_LDADD) $(LIBS)
TwolCGrammar$(EXEEXT): $(TwolCGrammar_OBJECTS) $(TwolCGrammar_DEPENDENCIES) $(EXTRA_TwolCGrammar_DEPENDENCIES) 
	@rm -f TwolCGrammar$(EXEEXT)
	$(TwolCGrammar_LINK) $(TwolCGrammar_OBJECTS) $(TwolCGrammar_LDADD) $(LIBS)
hfst-twolc-system$(EXEEXT): $(hfst_twolc_system_OBJECTS) $(hfst_twolc_system_DEPENDENCIES) $(EXTRA_hfst_twolc_system_DEPENDENCIES) 
	@rm -f hfst-twolc-system$(EXEEXT)
	$(CXXLINK) $(hfst_twolc_system_OBJECTS) $(hfst_twolc_system_LDADD) $(LIBS)
htwolcpre1.h: htwolcpre1.cc
	@if test ! -f $@; then rm -f htwolcpre1.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) htwolcpre1.cc; else :; fi
htwolcpre1$(EXEEXT): $(htwolcpre1_OBJECTS) $(htwolcpre1_DEPENDENCIES) $(EXTRA_htwolcpre1_DEPENDENCIES) 
	@rm -f htwolcpre1$(EXEEXT)
	$(CXXLINK) $(htwolcpre1_OBJECTS) $(htwolcpre1_LDADD) $(LIBS)
htwolcpre2.h: htwolcpre2.cc
	@if test ! -f $@; then rm -f htwolcpre2.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) htwolcpre2.cc; else :; fi
htwolcpre2$(EXEEXT): $(htwolcpre2_OBJECTS) $(htwolcpre2_DEPENDENCIES) $(EXTRA_htwolcpre2_DEPENDENCIES) 
	@rm -f htwolcpre2$(EXEEXT)
	$(CXXLINK) $(htwolcpre2_OBJECTS) $(htwolcpre2_LDADD) $(LIBS)
htwolcpre3.h: htwolcpre3.cc
	@if test ! -f $@; then rm -f htwolcpre3.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) htwolcpre3.cc; else :; fi
htwolcpre3$(EXEEXT): $(htwolcpre3_OBJECTS) $(htwolcpre3_DEPENDENCIES) $(EXTRA_htwolcpre3_DEPENDENCIES) 
	@rm -f htwolcpre3$(EXEEXT)
	$(CXXLINK) $(htwolcpre3_OBJECTS) $(htwolcpre3_LDADD) $(LIBS)
string_manipulation$(EXEEXT): $(string_manipulation_OBJECTS) $(string_manipulation_DEPENDENCIES) $(EXTRA_string_manipulation_DEPENDENCIES) 
	@rm -f string_manipulation$(EXEEXT)
	$(string_manipulation_LINK) $(string_manipulation_OBJECTS) $(string_manipulation_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

installcheck-binSCRIPTS: $(bin_SCRIPTS)
	bad=0; pid=$$$$; list="$(bin_SCRIPTS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | sed 's,^.*/,,;$(transform)'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Alphabet-Alphabet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Alphabet-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Alphabet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommandLine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingLeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConflictResolvingRightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputReader-InputReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputReader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRule-LeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRule-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRule-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftArrowRuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftRestrictionArrowRule-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LeftRestrictionArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRule-RightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRule-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRule-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightArrowRuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rule-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rule-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rule-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleContainer-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleContainer-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleContainer-RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleContainer-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleSymbolVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleVariables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RuleVariablesConstIterator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-Alphabet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-LeftArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-RightArrowRule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-Rule.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-RuleContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-TwolCGrammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TwolCGrammar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VariableValues.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hfst-twolc-system.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/htwolcpre1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/htwolcpre2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/htwolcpre3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scanner1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scanner2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scanner3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/string_manipulation-string_manipulation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/string_manipulation.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

Alphabet-Alphabet.o: $(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -MT Alphabet-Alphabet.o -MD -MP -MF $(DEPDIR)/Alphabet-Alphabet.Tpo -c -o Alphabet-Alphabet.o `test -f '$(ALPHABET_SRC)/Alphabet.cc' || echo '$(srcdir)/'`$(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Alphabet-Alphabet.Tpo $(DEPDIR)/Alphabet-Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(ALPHABET_SRC)/Alphabet.cc' object='Alphabet-Alphabet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet-Alphabet.o `test -f '$(ALPHABET_SRC)/Alphabet.cc' || echo '$(srcdir)/'`$(ALPHABET_SRC)/Alphabet.cc

Alphabet-Alphabet.obj: $(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -MT Alphabet-Alphabet.obj -MD -MP -MF $(DEPDIR)/Alphabet-Alphabet.Tpo -c -o Alphabet-Alphabet.obj `if test -f '$(ALPHABET_SRC)/Alphabet.cc'; then $(CYGPATH_W) '$(ALPHABET_SRC)/Alphabet.cc'; else $(CYGPATH_W) '$(srcdir)/$(ALPHABET_SRC)/Alphabet.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Alphabet-Alphabet.Tpo $(DEPDIR)/Alphabet-Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(ALPHABET_SRC)/Alphabet.cc' object='Alphabet-Alphabet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet-Alphabet.obj `if test -f '$(ALPHABET_SRC)/Alphabet.cc'; then $(CYGPATH_W) '$(ALPHABET_SRC)/Alphabet.cc'; else $(CYGPATH_W) '$(srcdir)/$(ALPHABET_SRC)/Alphabet.cc'; fi`

Alphabet-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -MT Alphabet-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/Alphabet-OtherSymbolTransducer.Tpo -c -o Alphabet-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Alphabet-OtherSymbolTransducer.Tpo $(DEPDIR)/Alphabet-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='Alphabet-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

Alphabet-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -MT Alphabet-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/Alphabet-OtherSymbolTransducer.Tpo -c -o Alphabet-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Alphabet-OtherSymbolTransducer.Tpo $(DEPDIR)/Alphabet-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='Alphabet-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Alphabet_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

ConflictResolvingLeftArrowRule-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Tpo -c -o ConflictResolvingLeftArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='ConflictResolvingLeftArrowRule-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

ConflictResolvingLeftArrowRule-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Tpo -c -o ConflictResolvingLeftArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='ConflictResolvingLeftArrowRule-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

ConflictResolvingLeftArrowRule-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-Rule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Tpo -c -o ConflictResolvingLeftArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='ConflictResolvingLeftArrowRule-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

ConflictResolvingLeftArrowRule-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-Rule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Tpo -c -o ConflictResolvingLeftArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='ConflictResolvingLeftArrowRule-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

ConflictResolvingLeftArrowRule-RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-RuleContainer.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Tpo -c -o ConflictResolvingLeftArrowRule-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='ConflictResolvingLeftArrowRule-RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

ConflictResolvingLeftArrowRule-RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-RuleContainer.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Tpo -c -o ConflictResolvingLeftArrowRule-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='ConflictResolvingLeftArrowRule-RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

ConflictResolvingLeftArrowRule-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-string_manipulation.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Tpo -c -o ConflictResolvingLeftArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='ConflictResolvingLeftArrowRule-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

ConflictResolvingLeftArrowRule-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-string_manipulation.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Tpo -c -o ConflictResolvingLeftArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='ConflictResolvingLeftArrowRule-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.o: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Tpo -c -o ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc

ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.obj: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Tpo -c -o ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`

ConflictResolvingLeftArrowRule-LeftArrowRule.o: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-LeftArrowRule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Tpo -c -o ConflictResolvingLeftArrowRule-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='ConflictResolvingLeftArrowRule-LeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc

ConflictResolvingLeftArrowRule-LeftArrowRule.obj: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule-LeftArrowRule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Tpo -c -o ConflictResolvingLeftArrowRule-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='ConflictResolvingLeftArrowRule-LeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingLeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`

ConflictResolvingRightArrowRule-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Tpo -c -o ConflictResolvingRightArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='ConflictResolvingRightArrowRule-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

ConflictResolvingRightArrowRule-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Tpo -c -o ConflictResolvingRightArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='ConflictResolvingRightArrowRule-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

ConflictResolvingRightArrowRule-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-Rule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Tpo -c -o ConflictResolvingRightArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='ConflictResolvingRightArrowRule-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

ConflictResolvingRightArrowRule-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-Rule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Tpo -c -o ConflictResolvingRightArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='ConflictResolvingRightArrowRule-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

ConflictResolvingRightArrowRule-RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-RuleContainer.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Tpo -c -o ConflictResolvingRightArrowRule-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='ConflictResolvingRightArrowRule-RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

ConflictResolvingRightArrowRule-RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-RuleContainer.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Tpo -c -o ConflictResolvingRightArrowRule-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='ConflictResolvingRightArrowRule-RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

ConflictResolvingRightArrowRule-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-string_manipulation.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Tpo -c -o ConflictResolvingRightArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='ConflictResolvingRightArrowRule-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

ConflictResolvingRightArrowRule-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-string_manipulation.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Tpo -c -o ConflictResolvingRightArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='ConflictResolvingRightArrowRule-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.o: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Tpo -c -o ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc

ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.obj: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Tpo -c -o ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`

ConflictResolvingRightArrowRule-RightArrowRule.o: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-RightArrowRule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Tpo -c -o ConflictResolvingRightArrowRule-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='ConflictResolvingRightArrowRule-RightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc

ConflictResolvingRightArrowRule-RightArrowRule.obj: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule-RightArrowRule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Tpo -c -o ConflictResolvingRightArrowRule-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='ConflictResolvingRightArrowRule-RightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ConflictResolvingRightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`

InputReader-InputReader.o: $(IO_SRC)/InputReader.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(InputReader_CXXFLAGS) $(CXXFLAGS) -MT InputReader-InputReader.o -MD -MP -MF $(DEPDIR)/InputReader-InputReader.Tpo -c -o InputReader-InputReader.o `test -f '$(IO_SRC)/InputReader.cc' || echo '$(srcdir)/'`$(IO_SRC)/InputReader.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/InputReader-InputReader.Tpo $(DEPDIR)/InputReader-InputReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(IO_SRC)/InputReader.cc' object='InputReader-InputReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(InputReader_CXXFLAGS) $(CXXFLAGS) -c -o InputReader-InputReader.o `test -f '$(IO_SRC)/InputReader.cc' || echo '$(srcdir)/'`$(IO_SRC)/InputReader.cc

InputReader-InputReader.obj: $(IO_SRC)/InputReader.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(InputReader_CXXFLAGS) $(CXXFLAGS) -MT InputReader-InputReader.obj -MD -MP -MF $(DEPDIR)/InputReader-InputReader.Tpo -c -o InputReader-InputReader.obj `if test -f '$(IO_SRC)/InputReader.cc'; then $(CYGPATH_W) '$(IO_SRC)/InputReader.cc'; else $(CYGPATH_W) '$(srcdir)/$(IO_SRC)/InputReader.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/InputReader-InputReader.Tpo $(DEPDIR)/InputReader-InputReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(IO_SRC)/InputReader.cc' object='InputReader-InputReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(InputReader_CXXFLAGS) $(CXXFLAGS) -c -o InputReader-InputReader.obj `if test -f '$(IO_SRC)/InputReader.cc'; then $(CYGPATH_W) '$(IO_SRC)/InputReader.cc'; else $(CYGPATH_W) '$(srcdir)/$(IO_SRC)/InputReader.cc'; fi`

LeftArrowRule-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Tpo -c -o LeftArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='LeftArrowRule-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

LeftArrowRule-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Tpo -c -o LeftArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/LeftArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='LeftArrowRule-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

LeftArrowRule-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-string_manipulation.o -MD -MP -MF $(DEPDIR)/LeftArrowRule-string_manipulation.Tpo -c -o LeftArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-string_manipulation.Tpo $(DEPDIR)/LeftArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='LeftArrowRule-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

LeftArrowRule-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-string_manipulation.obj -MD -MP -MF $(DEPDIR)/LeftArrowRule-string_manipulation.Tpo -c -o LeftArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-string_manipulation.Tpo $(DEPDIR)/LeftArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='LeftArrowRule-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

LeftArrowRule-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-Rule.o -MD -MP -MF $(DEPDIR)/LeftArrowRule-Rule.Tpo -c -o LeftArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-Rule.Tpo $(DEPDIR)/LeftArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='LeftArrowRule-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

LeftArrowRule-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-Rule.obj -MD -MP -MF $(DEPDIR)/LeftArrowRule-Rule.Tpo -c -o LeftArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-Rule.Tpo $(DEPDIR)/LeftArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='LeftArrowRule-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

LeftArrowRule-LeftArrowRule.o: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-LeftArrowRule.o -MD -MP -MF $(DEPDIR)/LeftArrowRule-LeftArrowRule.Tpo -c -o LeftArrowRule-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-LeftArrowRule.Tpo $(DEPDIR)/LeftArrowRule-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftArrowRule-LeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc

LeftArrowRule-LeftArrowRule.obj: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule-LeftArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftArrowRule-LeftArrowRule.Tpo -c -o LeftArrowRule-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule-LeftArrowRule.Tpo $(DEPDIR)/LeftArrowRule-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftArrowRule-LeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`

LeftArrowRuleContainer-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Tpo -c -o LeftArrowRuleContainer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Tpo $(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='LeftArrowRuleContainer-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

LeftArrowRuleContainer-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Tpo -c -o LeftArrowRuleContainer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Tpo $(DEPDIR)/LeftArrowRuleContainer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='LeftArrowRuleContainer-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

LeftArrowRuleContainer-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-Rule.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-Rule.Tpo -c -o LeftArrowRuleContainer-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-Rule.Tpo $(DEPDIR)/LeftArrowRuleContainer-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='LeftArrowRuleContainer-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

LeftArrowRuleContainer-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-Rule.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-Rule.Tpo -c -o LeftArrowRuleContainer-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-Rule.Tpo $(DEPDIR)/LeftArrowRuleContainer-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='LeftArrowRuleContainer-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

LeftArrowRuleContainer-RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-RuleContainer.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Tpo -c -o LeftArrowRuleContainer-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Tpo $(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='LeftArrowRuleContainer-RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

LeftArrowRuleContainer-RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-RuleContainer.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Tpo -c -o LeftArrowRuleContainer-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Tpo $(DEPDIR)/LeftArrowRuleContainer-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='LeftArrowRuleContainer-RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

LeftArrowRuleContainer-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-string_manipulation.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Tpo -c -o LeftArrowRuleContainer-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Tpo $(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='LeftArrowRuleContainer-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

LeftArrowRuleContainer-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-string_manipulation.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Tpo -c -o LeftArrowRuleContainer-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Tpo $(DEPDIR)/LeftArrowRuleContainer-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='LeftArrowRuleContainer-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.o: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Tpo -c -o LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc

LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.obj: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Tpo -c -o LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`

LeftArrowRuleContainer-LeftArrowRuleContainer.o: $(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-LeftArrowRuleContainer.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Tpo -c -o LeftArrowRuleContainer-LeftArrowRuleContainer.o `test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Tpo $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRuleContainer.cc' object='LeftArrowRuleContainer-LeftArrowRuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-LeftArrowRuleContainer.o `test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRuleContainer.cc

LeftArrowRuleContainer-LeftArrowRuleContainer.obj: $(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-LeftArrowRuleContainer.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Tpo -c -o LeftArrowRuleContainer-LeftArrowRuleContainer.obj `if test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Tpo $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRuleContainer.cc' object='LeftArrowRuleContainer-LeftArrowRuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-LeftArrowRuleContainer.obj `if test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRuleContainer.cc'; fi`

LeftArrowRuleContainer-LeftArrowRule.o: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-LeftArrowRule.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Tpo -c -o LeftArrowRuleContainer-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Tpo $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftArrowRuleContainer-LeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc

LeftArrowRuleContainer-LeftArrowRule.obj: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer-LeftArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Tpo -c -o LeftArrowRuleContainer-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Tpo $(DEPDIR)/LeftArrowRuleContainer-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftArrowRuleContainer-LeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`

LeftRestrictionArrowRule-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Tpo -c -o LeftRestrictionArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='LeftRestrictionArrowRule-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

LeftRestrictionArrowRule-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Tpo -c -o LeftRestrictionArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/LeftRestrictionArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='LeftRestrictionArrowRule-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

LeftRestrictionArrowRule-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-string_manipulation.o -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Tpo -c -o LeftRestrictionArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Tpo $(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='LeftRestrictionArrowRule-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

LeftRestrictionArrowRule-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-string_manipulation.obj -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Tpo -c -o LeftRestrictionArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Tpo $(DEPDIR)/LeftRestrictionArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='LeftRestrictionArrowRule-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

LeftRestrictionArrowRule-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-Rule.o -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-Rule.Tpo -c -o LeftRestrictionArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-Rule.Tpo $(DEPDIR)/LeftRestrictionArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='LeftRestrictionArrowRule-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

LeftRestrictionArrowRule-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-Rule.obj -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-Rule.Tpo -c -o LeftRestrictionArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-Rule.Tpo $(DEPDIR)/LeftRestrictionArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='LeftRestrictionArrowRule-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

LeftRestrictionArrowRule-LeftArrowRule.o: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-LeftArrowRule.o -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Tpo -c -o LeftRestrictionArrowRule-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Tpo $(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftRestrictionArrowRule-LeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc

LeftRestrictionArrowRule-LeftArrowRule.obj: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-LeftArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Tpo -c -o LeftRestrictionArrowRule-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Tpo $(DEPDIR)/LeftRestrictionArrowRule-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftRestrictionArrowRule-LeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`

LeftRestrictionArrowRule-LeftRestrictionArrowRule.o: $(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-LeftRestrictionArrowRule.o -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Tpo -c -o LeftRestrictionArrowRule-LeftRestrictionArrowRule.o `test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Tpo $(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftRestrictionArrowRule.cc' object='LeftRestrictionArrowRule-LeftRestrictionArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-LeftRestrictionArrowRule.o `test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftRestrictionArrowRule.cc

LeftRestrictionArrowRule-LeftRestrictionArrowRule.obj: $(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule-LeftRestrictionArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Tpo -c -o LeftRestrictionArrowRule-LeftRestrictionArrowRule.obj `if test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftRestrictionArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Tpo $(DEPDIR)/LeftRestrictionArrowRule-LeftRestrictionArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftRestrictionArrowRule.cc' object='LeftRestrictionArrowRule-LeftRestrictionArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(LeftRestrictionArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule-LeftRestrictionArrowRule.obj `if test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftRestrictionArrowRule.cc'; fi`

OtherSymbolTransducer-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OtherSymbolTransducer_CXXFLAGS) $(CXXFLAGS) -MT OtherSymbolTransducer-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Tpo -c -o OtherSymbolTransducer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Tpo $(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='OtherSymbolTransducer-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OtherSymbolTransducer_CXXFLAGS) $(CXXFLAGS) -c -o OtherSymbolTransducer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

OtherSymbolTransducer-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OtherSymbolTransducer_CXXFLAGS) $(CXXFLAGS) -MT OtherSymbolTransducer-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Tpo -c -o OtherSymbolTransducer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Tpo $(DEPDIR)/OtherSymbolTransducer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='OtherSymbolTransducer-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OtherSymbolTransducer_CXXFLAGS) $(CXXFLAGS) -c -o OtherSymbolTransducer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

RightArrowRule-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Tpo -c -o RightArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='RightArrowRule-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

RightArrowRule-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Tpo -c -o RightArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Tpo $(DEPDIR)/RightArrowRule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='RightArrowRule-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

RightArrowRule-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-string_manipulation.o -MD -MP -MF $(DEPDIR)/RightArrowRule-string_manipulation.Tpo -c -o RightArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-string_manipulation.Tpo $(DEPDIR)/RightArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='RightArrowRule-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

RightArrowRule-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-string_manipulation.obj -MD -MP -MF $(DEPDIR)/RightArrowRule-string_manipulation.Tpo -c -o RightArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-string_manipulation.Tpo $(DEPDIR)/RightArrowRule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='RightArrowRule-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

RightArrowRule-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-Rule.o -MD -MP -MF $(DEPDIR)/RightArrowRule-Rule.Tpo -c -o RightArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-Rule.Tpo $(DEPDIR)/RightArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='RightArrowRule-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

RightArrowRule-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-Rule.obj -MD -MP -MF $(DEPDIR)/RightArrowRule-Rule.Tpo -c -o RightArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-Rule.Tpo $(DEPDIR)/RightArrowRule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='RightArrowRule-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

RightArrowRule-RightArrowRule.o: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-RightArrowRule.o -MD -MP -MF $(DEPDIR)/RightArrowRule-RightArrowRule.Tpo -c -o RightArrowRule-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-RightArrowRule.Tpo $(DEPDIR)/RightArrowRule-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='RightArrowRule-RightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc

RightArrowRule-RightArrowRule.obj: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule-RightArrowRule.obj -MD -MP -MF $(DEPDIR)/RightArrowRule-RightArrowRule.Tpo -c -o RightArrowRule-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule-RightArrowRule.Tpo $(DEPDIR)/RightArrowRule-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='RightArrowRule-RightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRule_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`

RightArrowRuleContainer-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Tpo -c -o RightArrowRuleContainer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Tpo $(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='RightArrowRuleContainer-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

RightArrowRuleContainer-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Tpo -c -o RightArrowRuleContainer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Tpo $(DEPDIR)/RightArrowRuleContainer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='RightArrowRuleContainer-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

RightArrowRuleContainer-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-Rule.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-Rule.Tpo -c -o RightArrowRuleContainer-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-Rule.Tpo $(DEPDIR)/RightArrowRuleContainer-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='RightArrowRuleContainer-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

RightArrowRuleContainer-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-Rule.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-Rule.Tpo -c -o RightArrowRuleContainer-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-Rule.Tpo $(DEPDIR)/RightArrowRuleContainer-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='RightArrowRuleContainer-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

RightArrowRuleContainer-RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-RuleContainer.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-RuleContainer.Tpo -c -o RightArrowRuleContainer-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-RuleContainer.Tpo $(DEPDIR)/RightArrowRuleContainer-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='RightArrowRuleContainer-RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

RightArrowRuleContainer-RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-RuleContainer.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-RuleContainer.Tpo -c -o RightArrowRuleContainer-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-RuleContainer.Tpo $(DEPDIR)/RightArrowRuleContainer-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='RightArrowRuleContainer-RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

RightArrowRuleContainer-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-string_manipulation.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-string_manipulation.Tpo -c -o RightArrowRuleContainer-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-string_manipulation.Tpo $(DEPDIR)/RightArrowRuleContainer-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='RightArrowRuleContainer-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

RightArrowRuleContainer-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-string_manipulation.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-string_manipulation.Tpo -c -o RightArrowRuleContainer-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-string_manipulation.Tpo $(DEPDIR)/RightArrowRuleContainer-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='RightArrowRuleContainer-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

RightArrowRuleContainer-ConflictResolvingRightArrowRule.o: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-ConflictResolvingRightArrowRule.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Tpo -c -o RightArrowRuleContainer-ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='RightArrowRuleContainer-ConflictResolvingRightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc

RightArrowRuleContainer-ConflictResolvingRightArrowRule.obj: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-ConflictResolvingRightArrowRule.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Tpo -c -o RightArrowRuleContainer-ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/RightArrowRuleContainer-ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='RightArrowRuleContainer-ConflictResolvingRightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`

RightArrowRuleContainer-RightArrowRuleContainer.o: $(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-RightArrowRuleContainer.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Tpo -c -o RightArrowRuleContainer-RightArrowRuleContainer.o `test -f '$(RULE_SRC)/RightArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Tpo $(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRuleContainer.cc' object='RightArrowRuleContainer-RightArrowRuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-RightArrowRuleContainer.o `test -f '$(RULE_SRC)/RightArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRuleContainer.cc

RightArrowRuleContainer-RightArrowRuleContainer.obj: $(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-RightArrowRuleContainer.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Tpo -c -o RightArrowRuleContainer-RightArrowRuleContainer.obj `if test -f '$(RULE_SRC)/RightArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Tpo $(DEPDIR)/RightArrowRuleContainer-RightArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRuleContainer.cc' object='RightArrowRuleContainer-RightArrowRuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-RightArrowRuleContainer.obj `if test -f '$(RULE_SRC)/RightArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRuleContainer.cc'; fi`

RightArrowRuleContainer-RightArrowRule.o: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-RightArrowRule.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Tpo -c -o RightArrowRuleContainer-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Tpo $(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='RightArrowRuleContainer-RightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc

RightArrowRuleContainer-RightArrowRule.obj: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer-RightArrowRule.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Tpo -c -o RightArrowRuleContainer-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Tpo $(DEPDIR)/RightArrowRuleContainer-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='RightArrowRuleContainer-RightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RightArrowRuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`

Rule-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -MT Rule-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/Rule-OtherSymbolTransducer.Tpo -c -o Rule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule-OtherSymbolTransducer.Tpo $(DEPDIR)/Rule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='Rule-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -c -o Rule-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

Rule-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -MT Rule-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/Rule-OtherSymbolTransducer.Tpo -c -o Rule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule-OtherSymbolTransducer.Tpo $(DEPDIR)/Rule-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='Rule-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -c -o Rule-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

Rule-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -MT Rule-Rule.o -MD -MP -MF $(DEPDIR)/Rule-Rule.Tpo -c -o Rule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule-Rule.Tpo $(DEPDIR)/Rule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='Rule-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -c -o Rule-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

Rule-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -MT Rule-Rule.obj -MD -MP -MF $(DEPDIR)/Rule-Rule.Tpo -c -o Rule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule-Rule.Tpo $(DEPDIR)/Rule-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='Rule-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -c -o Rule-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

Rule-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -MT Rule-string_manipulation.o -MD -MP -MF $(DEPDIR)/Rule-string_manipulation.Tpo -c -o Rule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule-string_manipulation.Tpo $(DEPDIR)/Rule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='Rule-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -c -o Rule-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

Rule-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -MT Rule-string_manipulation.obj -MD -MP -MF $(DEPDIR)/Rule-string_manipulation.Tpo -c -o Rule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule-string_manipulation.Tpo $(DEPDIR)/Rule-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='Rule-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Rule_CXXFLAGS) $(CXXFLAGS) -c -o Rule-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

RuleContainer-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/RuleContainer-OtherSymbolTransducer.Tpo -c -o RuleContainer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-OtherSymbolTransducer.Tpo $(DEPDIR)/RuleContainer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='RuleContainer-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

RuleContainer-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/RuleContainer-OtherSymbolTransducer.Tpo -c -o RuleContainer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-OtherSymbolTransducer.Tpo $(DEPDIR)/RuleContainer-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='RuleContainer-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

RuleContainer-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-Rule.o -MD -MP -MF $(DEPDIR)/RuleContainer-Rule.Tpo -c -o RuleContainer-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-Rule.Tpo $(DEPDIR)/RuleContainer-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='RuleContainer-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

RuleContainer-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-Rule.obj -MD -MP -MF $(DEPDIR)/RuleContainer-Rule.Tpo -c -o RuleContainer-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-Rule.Tpo $(DEPDIR)/RuleContainer-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='RuleContainer-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

RuleContainer-RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-RuleContainer.o -MD -MP -MF $(DEPDIR)/RuleContainer-RuleContainer.Tpo -c -o RuleContainer-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-RuleContainer.Tpo $(DEPDIR)/RuleContainer-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='RuleContainer-RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

RuleContainer-RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-RuleContainer.obj -MD -MP -MF $(DEPDIR)/RuleContainer-RuleContainer.Tpo -c -o RuleContainer-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-RuleContainer.Tpo $(DEPDIR)/RuleContainer-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='RuleContainer-RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

RuleContainer-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-string_manipulation.o -MD -MP -MF $(DEPDIR)/RuleContainer-string_manipulation.Tpo -c -o RuleContainer-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-string_manipulation.Tpo $(DEPDIR)/RuleContainer-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='RuleContainer-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

RuleContainer-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer-string_manipulation.obj -MD -MP -MF $(DEPDIR)/RuleContainer-string_manipulation.Tpo -c -o RuleContainer-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer-string_manipulation.Tpo $(DEPDIR)/RuleContainer-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='RuleContainer-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(RuleContainer_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

TwolCGrammar-OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Tpo -c -o TwolCGrammar-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Tpo $(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='TwolCGrammar-OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

TwolCGrammar-OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Tpo -c -o TwolCGrammar-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Tpo $(DEPDIR)/TwolCGrammar-OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='TwolCGrammar-OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

TwolCGrammar-Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-Rule.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-Rule.Tpo -c -o TwolCGrammar-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-Rule.Tpo $(DEPDIR)/TwolCGrammar-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='TwolCGrammar-Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

TwolCGrammar-Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-Rule.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-Rule.Tpo -c -o TwolCGrammar-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-Rule.Tpo $(DEPDIR)/TwolCGrammar-Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='TwolCGrammar-Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

TwolCGrammar-RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-RuleContainer.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-RuleContainer.Tpo -c -o TwolCGrammar-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-RuleContainer.Tpo $(DEPDIR)/TwolCGrammar-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='TwolCGrammar-RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

TwolCGrammar-RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-RuleContainer.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-RuleContainer.Tpo -c -o TwolCGrammar-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-RuleContainer.Tpo $(DEPDIR)/TwolCGrammar-RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='TwolCGrammar-RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

TwolCGrammar-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-string_manipulation.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-string_manipulation.Tpo -c -o TwolCGrammar-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-string_manipulation.Tpo $(DEPDIR)/TwolCGrammar-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='TwolCGrammar-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

TwolCGrammar-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-string_manipulation.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-string_manipulation.Tpo -c -o TwolCGrammar-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-string_manipulation.Tpo $(DEPDIR)/TwolCGrammar-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='TwolCGrammar-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

TwolCGrammar-ConflictResolvingLeftArrowRule.o: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-ConflictResolvingLeftArrowRule.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Tpo -c -o TwolCGrammar-ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='TwolCGrammar-ConflictResolvingLeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc

TwolCGrammar-ConflictResolvingLeftArrowRule.obj: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-ConflictResolvingLeftArrowRule.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Tpo -c -o TwolCGrammar-ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/TwolCGrammar-ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='TwolCGrammar-ConflictResolvingLeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`

TwolCGrammar-LeftArrowRule.o: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-LeftArrowRule.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-LeftArrowRule.Tpo -c -o TwolCGrammar-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-LeftArrowRule.Tpo $(DEPDIR)/TwolCGrammar-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='TwolCGrammar-LeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc

TwolCGrammar-LeftArrowRule.obj: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-LeftArrowRule.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-LeftArrowRule.Tpo -c -o TwolCGrammar-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-LeftArrowRule.Tpo $(DEPDIR)/TwolCGrammar-LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='TwolCGrammar-LeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`

TwolCGrammar-ConflictResolvingRightArrowRule.o: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-ConflictResolvingRightArrowRule.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Tpo -c -o TwolCGrammar-ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='TwolCGrammar-ConflictResolvingRightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc

TwolCGrammar-ConflictResolvingRightArrowRule.obj: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-ConflictResolvingRightArrowRule.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Tpo -c -o TwolCGrammar-ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/TwolCGrammar-ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='TwolCGrammar-ConflictResolvingRightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`

TwolCGrammar-RightArrowRule.o: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-RightArrowRule.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-RightArrowRule.Tpo -c -o TwolCGrammar-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-RightArrowRule.Tpo $(DEPDIR)/TwolCGrammar-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='TwolCGrammar-RightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc

TwolCGrammar-RightArrowRule.obj: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-RightArrowRule.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-RightArrowRule.Tpo -c -o TwolCGrammar-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-RightArrowRule.Tpo $(DEPDIR)/TwolCGrammar-RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='TwolCGrammar-RightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`

TwolCGrammar-RightArrowRuleContainer.o: $(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-RightArrowRuleContainer.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Tpo -c -o TwolCGrammar-RightArrowRuleContainer.o `test -f '$(RULE_SRC)/RightArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Tpo $(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRuleContainer.cc' object='TwolCGrammar-RightArrowRuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-RightArrowRuleContainer.o `test -f '$(RULE_SRC)/RightArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRuleContainer.cc

TwolCGrammar-RightArrowRuleContainer.obj: $(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-RightArrowRuleContainer.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Tpo -c -o TwolCGrammar-RightArrowRuleContainer.obj `if test -f '$(RULE_SRC)/RightArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Tpo $(DEPDIR)/TwolCGrammar-RightArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRuleContainer.cc' object='TwolCGrammar-RightArrowRuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-RightArrowRuleContainer.obj `if test -f '$(RULE_SRC)/RightArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRuleContainer.cc'; fi`

TwolCGrammar-LeftArrowRuleContainer.o: $(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-LeftArrowRuleContainer.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Tpo -c -o TwolCGrammar-LeftArrowRuleContainer.o `test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Tpo $(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRuleContainer.cc' object='TwolCGrammar-LeftArrowRuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-LeftArrowRuleContainer.o `test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRuleContainer.cc

TwolCGrammar-LeftArrowRuleContainer.obj: $(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-LeftArrowRuleContainer.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Tpo -c -o TwolCGrammar-LeftArrowRuleContainer.obj `if test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Tpo $(DEPDIR)/TwolCGrammar-LeftArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRuleContainer.cc' object='TwolCGrammar-LeftArrowRuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-LeftArrowRuleContainer.obj `if test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRuleContainer.cc'; fi`

TwolCGrammar-TwolCGrammar.o: $(RULE_SRC)/TwolCGrammar.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-TwolCGrammar.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-TwolCGrammar.Tpo -c -o TwolCGrammar-TwolCGrammar.o `test -f '$(RULE_SRC)/TwolCGrammar.cc' || echo '$(srcdir)/'`$(RULE_SRC)/TwolCGrammar.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-TwolCGrammar.Tpo $(DEPDIR)/TwolCGrammar-TwolCGrammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/TwolCGrammar.cc' object='TwolCGrammar-TwolCGrammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-TwolCGrammar.o `test -f '$(RULE_SRC)/TwolCGrammar.cc' || echo '$(srcdir)/'`$(RULE_SRC)/TwolCGrammar.cc

TwolCGrammar-TwolCGrammar.obj: $(RULE_SRC)/TwolCGrammar.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-TwolCGrammar.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-TwolCGrammar.Tpo -c -o TwolCGrammar-TwolCGrammar.obj `if test -f '$(RULE_SRC)/TwolCGrammar.cc'; then $(CYGPATH_W) '$(RULE_SRC)/TwolCGrammar.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/TwolCGrammar.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-TwolCGrammar.Tpo $(DEPDIR)/TwolCGrammar-TwolCGrammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/TwolCGrammar.cc' object='TwolCGrammar-TwolCGrammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-TwolCGrammar.obj `if test -f '$(RULE_SRC)/TwolCGrammar.cc'; then $(CYGPATH_W) '$(RULE_SRC)/TwolCGrammar.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/TwolCGrammar.cc'; fi`

TwolCGrammar-LeftRestrictionArrowRule.o: $(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-LeftRestrictionArrowRule.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Tpo -c -o TwolCGrammar-LeftRestrictionArrowRule.o `test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Tpo $(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftRestrictionArrowRule.cc' object='TwolCGrammar-LeftRestrictionArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-LeftRestrictionArrowRule.o `test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftRestrictionArrowRule.cc

TwolCGrammar-LeftRestrictionArrowRule.obj: $(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-LeftRestrictionArrowRule.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Tpo -c -o TwolCGrammar-LeftRestrictionArrowRule.obj `if test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftRestrictionArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Tpo $(DEPDIR)/TwolCGrammar-LeftRestrictionArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftRestrictionArrowRule.cc' object='TwolCGrammar-LeftRestrictionArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-LeftRestrictionArrowRule.obj `if test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftRestrictionArrowRule.cc'; fi`

TwolCGrammar-Alphabet.o: $(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-Alphabet.o -MD -MP -MF $(DEPDIR)/TwolCGrammar-Alphabet.Tpo -c -o TwolCGrammar-Alphabet.o `test -f '$(ALPHABET_SRC)/Alphabet.cc' || echo '$(srcdir)/'`$(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-Alphabet.Tpo $(DEPDIR)/TwolCGrammar-Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(ALPHABET_SRC)/Alphabet.cc' object='TwolCGrammar-Alphabet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-Alphabet.o `test -f '$(ALPHABET_SRC)/Alphabet.cc' || echo '$(srcdir)/'`$(ALPHABET_SRC)/Alphabet.cc

TwolCGrammar-Alphabet.obj: $(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar-Alphabet.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar-Alphabet.Tpo -c -o TwolCGrammar-Alphabet.obj `if test -f '$(ALPHABET_SRC)/Alphabet.cc'; then $(CYGPATH_W) '$(ALPHABET_SRC)/Alphabet.cc'; else $(CYGPATH_W) '$(srcdir)/$(ALPHABET_SRC)/Alphabet.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar-Alphabet.Tpo $(DEPDIR)/TwolCGrammar-Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(ALPHABET_SRC)/Alphabet.cc' object='TwolCGrammar-Alphabet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(TwolCGrammar_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar-Alphabet.obj `if test -f '$(ALPHABET_SRC)/Alphabet.cc'; then $(CYGPATH_W) '$(ALPHABET_SRC)/Alphabet.cc'; else $(CYGPATH_W) '$(srcdir)/$(ALPHABET_SRC)/Alphabet.cc'; fi`

CommandLine.o: $(CL_SRC)/CommandLine.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CommandLine.o -MD -MP -MF $(DEPDIR)/CommandLine.Tpo -c -o CommandLine.o `test -f '$(CL_SRC)/CommandLine.cc' || echo '$(srcdir)/'`$(CL_SRC)/CommandLine.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CommandLine.Tpo $(DEPDIR)/CommandLine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(CL_SRC)/CommandLine.cc' object='CommandLine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CommandLine.o `test -f '$(CL_SRC)/CommandLine.cc' || echo '$(srcdir)/'`$(CL_SRC)/CommandLine.cc

CommandLine.obj: $(CL_SRC)/CommandLine.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CommandLine.obj -MD -MP -MF $(DEPDIR)/CommandLine.Tpo -c -o CommandLine.obj `if test -f '$(CL_SRC)/CommandLine.cc'; then $(CYGPATH_W) '$(CL_SRC)/CommandLine.cc'; else $(CYGPATH_W) '$(srcdir)/$(CL_SRC)/CommandLine.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/CommandLine.Tpo $(DEPDIR)/CommandLine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(CL_SRC)/CommandLine.cc' object='CommandLine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CommandLine.obj `if test -f '$(CL_SRC)/CommandLine.cc'; then $(CYGPATH_W) '$(CL_SRC)/CommandLine.cc'; else $(CYGPATH_W) '$(srcdir)/$(CL_SRC)/CommandLine.cc'; fi`

InputReader.o: $(IO_SRC)/InputReader.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputReader.o -MD -MP -MF $(DEPDIR)/InputReader.Tpo -c -o InputReader.o `test -f '$(IO_SRC)/InputReader.cc' || echo '$(srcdir)/'`$(IO_SRC)/InputReader.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/InputReader.Tpo $(DEPDIR)/InputReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(IO_SRC)/InputReader.cc' object='InputReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputReader.o `test -f '$(IO_SRC)/InputReader.cc' || echo '$(srcdir)/'`$(IO_SRC)/InputReader.cc

InputReader.obj: $(IO_SRC)/InputReader.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputReader.obj -MD -MP -MF $(DEPDIR)/InputReader.Tpo -c -o InputReader.obj `if test -f '$(IO_SRC)/InputReader.cc'; then $(CYGPATH_W) '$(IO_SRC)/InputReader.cc'; else $(CYGPATH_W) '$(srcdir)/$(IO_SRC)/InputReader.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/InputReader.Tpo $(DEPDIR)/InputReader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(IO_SRC)/InputReader.cc' object='InputReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputReader.obj `if test -f '$(IO_SRC)/InputReader.cc'; then $(CYGPATH_W) '$(IO_SRC)/InputReader.cc'; else $(CYGPATH_W) '$(srcdir)/$(IO_SRC)/InputReader.cc'; fi`

string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string_manipulation.o -MD -MP -MF $(DEPDIR)/string_manipulation.Tpo -c -o string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/string_manipulation.Tpo $(DEPDIR)/string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT string_manipulation.obj -MD -MP -MF $(DEPDIR)/string_manipulation.Tpo -c -o string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/string_manipulation.Tpo $(DEPDIR)/string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

VariableValues.o: $(VARIABLE_SRC)/VariableValues.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VariableValues.o -MD -MP -MF $(DEPDIR)/VariableValues.Tpo -c -o VariableValues.o `test -f '$(VARIABLE_SRC)/VariableValues.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/VariableValues.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/VariableValues.Tpo $(DEPDIR)/VariableValues.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/VariableValues.cc' object='VariableValues.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VariableValues.o `test -f '$(VARIABLE_SRC)/VariableValues.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/VariableValues.cc

VariableValues.obj: $(VARIABLE_SRC)/VariableValues.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VariableValues.obj -MD -MP -MF $(DEPDIR)/VariableValues.Tpo -c -o VariableValues.obj `if test -f '$(VARIABLE_SRC)/VariableValues.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/VariableValues.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/VariableValues.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/VariableValues.Tpo $(DEPDIR)/VariableValues.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/VariableValues.cc' object='VariableValues.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VariableValues.obj `if test -f '$(VARIABLE_SRC)/VariableValues.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/VariableValues.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/VariableValues.cc'; fi`

RuleVariablesConstIterator.o: $(VARIABLE_SRC)/RuleVariablesConstIterator.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleVariablesConstIterator.o -MD -MP -MF $(DEPDIR)/RuleVariablesConstIterator.Tpo -c -o RuleVariablesConstIterator.o `test -f '$(VARIABLE_SRC)/RuleVariablesConstIterator.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/RuleVariablesConstIterator.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleVariablesConstIterator.Tpo $(DEPDIR)/RuleVariablesConstIterator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/RuleVariablesConstIterator.cc' object='RuleVariablesConstIterator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleVariablesConstIterator.o `test -f '$(VARIABLE_SRC)/RuleVariablesConstIterator.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/RuleVariablesConstIterator.cc

RuleVariablesConstIterator.obj: $(VARIABLE_SRC)/RuleVariablesConstIterator.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleVariablesConstIterator.obj -MD -MP -MF $(DEPDIR)/RuleVariablesConstIterator.Tpo -c -o RuleVariablesConstIterator.obj `if test -f '$(VARIABLE_SRC)/RuleVariablesConstIterator.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/RuleVariablesConstIterator.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/RuleVariablesConstIterator.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleVariablesConstIterator.Tpo $(DEPDIR)/RuleVariablesConstIterator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/RuleVariablesConstIterator.cc' object='RuleVariablesConstIterator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleVariablesConstIterator.obj `if test -f '$(VARIABLE_SRC)/RuleVariablesConstIterator.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/RuleVariablesConstIterator.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/RuleVariablesConstIterator.cc'; fi`

RuleVariables.o: $(VARIABLE_SRC)/RuleVariables.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleVariables.o -MD -MP -MF $(DEPDIR)/RuleVariables.Tpo -c -o RuleVariables.o `test -f '$(VARIABLE_SRC)/RuleVariables.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/RuleVariables.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleVariables.Tpo $(DEPDIR)/RuleVariables.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/RuleVariables.cc' object='RuleVariables.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleVariables.o `test -f '$(VARIABLE_SRC)/RuleVariables.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/RuleVariables.cc

RuleVariables.obj: $(VARIABLE_SRC)/RuleVariables.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleVariables.obj -MD -MP -MF $(DEPDIR)/RuleVariables.Tpo -c -o RuleVariables.obj `if test -f '$(VARIABLE_SRC)/RuleVariables.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/RuleVariables.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/RuleVariables.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleVariables.Tpo $(DEPDIR)/RuleVariables.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/RuleVariables.cc' object='RuleVariables.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleVariables.obj `if test -f '$(VARIABLE_SRC)/RuleVariables.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/RuleVariables.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/RuleVariables.cc'; fi`

RuleSymbolVector.o: $(VARIABLE_SRC)/RuleSymbolVector.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleSymbolVector.o -MD -MP -MF $(DEPDIR)/RuleSymbolVector.Tpo -c -o RuleSymbolVector.o `test -f '$(VARIABLE_SRC)/RuleSymbolVector.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/RuleSymbolVector.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleSymbolVector.Tpo $(DEPDIR)/RuleSymbolVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/RuleSymbolVector.cc' object='RuleSymbolVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleSymbolVector.o `test -f '$(VARIABLE_SRC)/RuleSymbolVector.cc' || echo '$(srcdir)/'`$(VARIABLE_SRC)/RuleSymbolVector.cc

RuleSymbolVector.obj: $(VARIABLE_SRC)/RuleSymbolVector.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleSymbolVector.obj -MD -MP -MF $(DEPDIR)/RuleSymbolVector.Tpo -c -o RuleSymbolVector.obj `if test -f '$(VARIABLE_SRC)/RuleSymbolVector.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/RuleSymbolVector.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/RuleSymbolVector.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleSymbolVector.Tpo $(DEPDIR)/RuleSymbolVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(VARIABLE_SRC)/RuleSymbolVector.cc' object='RuleSymbolVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleSymbolVector.obj `if test -f '$(VARIABLE_SRC)/RuleSymbolVector.cc'; then $(CYGPATH_W) '$(VARIABLE_SRC)/RuleSymbolVector.cc'; else $(CYGPATH_W) '$(srcdir)/$(VARIABLE_SRC)/RuleSymbolVector.cc'; fi`

Alphabet.o: $(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Alphabet.o -MD -MP -MF $(DEPDIR)/Alphabet.Tpo -c -o Alphabet.o `test -f '$(ALPHABET_SRC)/Alphabet.cc' || echo '$(srcdir)/'`$(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Alphabet.Tpo $(DEPDIR)/Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(ALPHABET_SRC)/Alphabet.cc' object='Alphabet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet.o `test -f '$(ALPHABET_SRC)/Alphabet.cc' || echo '$(srcdir)/'`$(ALPHABET_SRC)/Alphabet.cc

Alphabet.obj: $(ALPHABET_SRC)/Alphabet.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Alphabet.obj -MD -MP -MF $(DEPDIR)/Alphabet.Tpo -c -o Alphabet.obj `if test -f '$(ALPHABET_SRC)/Alphabet.cc'; then $(CYGPATH_W) '$(ALPHABET_SRC)/Alphabet.cc'; else $(CYGPATH_W) '$(srcdir)/$(ALPHABET_SRC)/Alphabet.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Alphabet.Tpo $(DEPDIR)/Alphabet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(ALPHABET_SRC)/Alphabet.cc' object='Alphabet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Alphabet.obj `if test -f '$(ALPHABET_SRC)/Alphabet.cc'; then $(CYGPATH_W) '$(ALPHABET_SRC)/Alphabet.cc'; else $(CYGPATH_W) '$(srcdir)/$(ALPHABET_SRC)/Alphabet.cc'; fi`

ConflictResolvingLeftArrowRule.o: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule.Tpo -c -o ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='ConflictResolvingLeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc

ConflictResolvingLeftArrowRule.obj: $(RULE_SRC)/ConflictResolvingLeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingLeftArrowRule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingLeftArrowRule.Tpo -c -o ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingLeftArrowRule.Tpo $(DEPDIR)/ConflictResolvingLeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc' object='ConflictResolvingLeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingLeftArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingLeftArrowRule.cc'; fi`

ConflictResolvingRightArrowRule.o: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule.o -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule.Tpo -c -o ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='ConflictResolvingRightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule.o `test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/ConflictResolvingRightArrowRule.cc

ConflictResolvingRightArrowRule.obj: $(RULE_SRC)/ConflictResolvingRightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ConflictResolvingRightArrowRule.obj -MD -MP -MF $(DEPDIR)/ConflictResolvingRightArrowRule.Tpo -c -o ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/ConflictResolvingRightArrowRule.Tpo $(DEPDIR)/ConflictResolvingRightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/ConflictResolvingRightArrowRule.cc' object='ConflictResolvingRightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ConflictResolvingRightArrowRule.obj `if test -f '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/ConflictResolvingRightArrowRule.cc'; fi`

LeftArrowRule.o: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule.o -MD -MP -MF $(DEPDIR)/LeftArrowRule.Tpo -c -o LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule.Tpo $(DEPDIR)/LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule.o `test -f '$(RULE_SRC)/LeftArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRule.cc

LeftArrowRule.obj: $(RULE_SRC)/LeftArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftArrowRule.Tpo -c -o LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRule.Tpo $(DEPDIR)/LeftArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRule.cc' object='LeftArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRule.obj `if test -f '$(RULE_SRC)/LeftArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRule.cc'; fi`

LeftArrowRuleContainer.o: $(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer.o -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer.Tpo -c -o LeftArrowRuleContainer.o `test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer.Tpo $(DEPDIR)/LeftArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRuleContainer.cc' object='LeftArrowRuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer.o `test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftArrowRuleContainer.cc

LeftArrowRuleContainer.obj: $(RULE_SRC)/LeftArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LeftArrowRuleContainer.obj -MD -MP -MF $(DEPDIR)/LeftArrowRuleContainer.Tpo -c -o LeftArrowRuleContainer.obj `if test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftArrowRuleContainer.Tpo $(DEPDIR)/LeftArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftArrowRuleContainer.cc' object='LeftArrowRuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LeftArrowRuleContainer.obj `if test -f '$(RULE_SRC)/LeftArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftArrowRuleContainer.cc'; fi`

LeftRestrictionArrowRule.o: $(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule.o -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule.Tpo -c -o LeftRestrictionArrowRule.o `test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule.Tpo $(DEPDIR)/LeftRestrictionArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftRestrictionArrowRule.cc' object='LeftRestrictionArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule.o `test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/LeftRestrictionArrowRule.cc

LeftRestrictionArrowRule.obj: $(RULE_SRC)/LeftRestrictionArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LeftRestrictionArrowRule.obj -MD -MP -MF $(DEPDIR)/LeftRestrictionArrowRule.Tpo -c -o LeftRestrictionArrowRule.obj `if test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftRestrictionArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/LeftRestrictionArrowRule.Tpo $(DEPDIR)/LeftRestrictionArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/LeftRestrictionArrowRule.cc' object='LeftRestrictionArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LeftRestrictionArrowRule.obj `if test -f '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/LeftRestrictionArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/LeftRestrictionArrowRule.cc'; fi`

OtherSymbolTransducer.o: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OtherSymbolTransducer.o -MD -MP -MF $(DEPDIR)/OtherSymbolTransducer.Tpo -c -o OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/OtherSymbolTransducer.Tpo $(DEPDIR)/OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='OtherSymbolTransducer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OtherSymbolTransducer.o `test -f '$(RULE_SRC)/OtherSymbolTransducer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/OtherSymbolTransducer.cc

OtherSymbolTransducer.obj: $(RULE_SRC)/OtherSymbolTransducer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OtherSymbolTransducer.obj -MD -MP -MF $(DEPDIR)/OtherSymbolTransducer.Tpo -c -o OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/OtherSymbolTransducer.Tpo $(DEPDIR)/OtherSymbolTransducer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/OtherSymbolTransducer.cc' object='OtherSymbolTransducer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OtherSymbolTransducer.obj `if test -f '$(RULE_SRC)/OtherSymbolTransducer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/OtherSymbolTransducer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/OtherSymbolTransducer.cc'; fi`

RightArrowRule.o: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule.o -MD -MP -MF $(DEPDIR)/RightArrowRule.Tpo -c -o RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule.Tpo $(DEPDIR)/RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='RightArrowRule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule.o `test -f '$(RULE_SRC)/RightArrowRule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRule.cc

RightArrowRule.obj: $(RULE_SRC)/RightArrowRule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRule.obj -MD -MP -MF $(DEPDIR)/RightArrowRule.Tpo -c -o RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRule.Tpo $(DEPDIR)/RightArrowRule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRule.cc' object='RightArrowRule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRule.obj `if test -f '$(RULE_SRC)/RightArrowRule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRule.cc'; fi`

RightArrowRuleContainer.o: $(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer.o -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer.Tpo -c -o RightArrowRuleContainer.o `test -f '$(RULE_SRC)/RightArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer.Tpo $(DEPDIR)/RightArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRuleContainer.cc' object='RightArrowRuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer.o `test -f '$(RULE_SRC)/RightArrowRuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RightArrowRuleContainer.cc

RightArrowRuleContainer.obj: $(RULE_SRC)/RightArrowRuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RightArrowRuleContainer.obj -MD -MP -MF $(DEPDIR)/RightArrowRuleContainer.Tpo -c -o RightArrowRuleContainer.obj `if test -f '$(RULE_SRC)/RightArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RightArrowRuleContainer.Tpo $(DEPDIR)/RightArrowRuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RightArrowRuleContainer.cc' object='RightArrowRuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RightArrowRuleContainer.obj `if test -f '$(RULE_SRC)/RightArrowRuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RightArrowRuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RightArrowRuleContainer.cc'; fi`

Rule.o: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rule.o -MD -MP -MF $(DEPDIR)/Rule.Tpo -c -o Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule.Tpo $(DEPDIR)/Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='Rule.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rule.o `test -f '$(RULE_SRC)/Rule.cc' || echo '$(srcdir)/'`$(RULE_SRC)/Rule.cc

Rule.obj: $(RULE_SRC)/Rule.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rule.obj -MD -MP -MF $(DEPDIR)/Rule.Tpo -c -o Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/Rule.Tpo $(DEPDIR)/Rule.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/Rule.cc' object='Rule.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rule.obj `if test -f '$(RULE_SRC)/Rule.cc'; then $(CYGPATH_W) '$(RULE_SRC)/Rule.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/Rule.cc'; fi`

RuleContainer.o: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer.o -MD -MP -MF $(DEPDIR)/RuleContainer.Tpo -c -o RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer.Tpo $(DEPDIR)/RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='RuleContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer.o `test -f '$(RULE_SRC)/RuleContainer.cc' || echo '$(srcdir)/'`$(RULE_SRC)/RuleContainer.cc

RuleContainer.obj: $(RULE_SRC)/RuleContainer.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RuleContainer.obj -MD -MP -MF $(DEPDIR)/RuleContainer.Tpo -c -o RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/RuleContainer.Tpo $(DEPDIR)/RuleContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/RuleContainer.cc' object='RuleContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RuleContainer.obj `if test -f '$(RULE_SRC)/RuleContainer.cc'; then $(CYGPATH_W) '$(RULE_SRC)/RuleContainer.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/RuleContainer.cc'; fi`

TwolCGrammar.o: $(RULE_SRC)/TwolCGrammar.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar.o -MD -MP -MF $(DEPDIR)/TwolCGrammar.Tpo -c -o TwolCGrammar.o `test -f '$(RULE_SRC)/TwolCGrammar.cc' || echo '$(srcdir)/'`$(RULE_SRC)/TwolCGrammar.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar.Tpo $(DEPDIR)/TwolCGrammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/TwolCGrammar.cc' object='TwolCGrammar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar.o `test -f '$(RULE_SRC)/TwolCGrammar.cc' || echo '$(srcdir)/'`$(RULE_SRC)/TwolCGrammar.cc

TwolCGrammar.obj: $(RULE_SRC)/TwolCGrammar.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TwolCGrammar.obj -MD -MP -MF $(DEPDIR)/TwolCGrammar.Tpo -c -o TwolCGrammar.obj `if test -f '$(RULE_SRC)/TwolCGrammar.cc'; then $(CYGPATH_W) '$(RULE_SRC)/TwolCGrammar.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/TwolCGrammar.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/TwolCGrammar.Tpo $(DEPDIR)/TwolCGrammar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(RULE_SRC)/TwolCGrammar.cc' object='TwolCGrammar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TwolCGrammar.obj `if test -f '$(RULE_SRC)/TwolCGrammar.cc'; then $(CYGPATH_W) '$(RULE_SRC)/TwolCGrammar.cc'; else $(CYGPATH_W) '$(srcdir)/$(RULE_SRC)/TwolCGrammar.cc'; fi`

string_manipulation-string_manipulation.o: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(string_manipulation_CXXFLAGS) $(CXXFLAGS) -MT string_manipulation-string_manipulation.o -MD -MP -MF $(DEPDIR)/string_manipulation-string_manipulation.Tpo -c -o string_manipulation-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/string_manipulation-string_manipulation.Tpo $(DEPDIR)/string_manipulation-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='string_manipulation-string_manipulation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(string_manipulation_CXXFLAGS) $(CXXFLAGS) -c -o string_manipulation-string_manipulation.o `test -f '$(STRING_SRC)/string_manipulation.cc' || echo '$(srcdir)/'`$(STRING_SRC)/string_manipulation.cc

string_manipulation-string_manipulation.obj: $(STRING_SRC)/string_manipulation.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(string_manipulation_CXXFLAGS) $(CXXFLAGS) -MT string_manipulation-string_manipulation.obj -MD -MP -MF $(DEPDIR)/string_manipulation-string_manipulation.Tpo -c -o string_manipulation-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/string_manipulation-string_manipulation.Tpo $(DEPDIR)/string_manipulation-string_manipulation.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(STRING_SRC)/string_manipulation.cc' object='string_manipulation-string_manipulation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(string_manipulation_CXXFLAGS) $(CXXFLAGS) -c -o string_manipulation-string_manipulation.obj `if test -f '$(STRING_SRC)/string_manipulation.cc'; then $(CYGPATH_W) '$(STRING_SRC)/string_manipulation.cc'; else $(CYGPATH_W) '$(srcdir)/$(STRING_SRC)/string_manipulation.cc'; fi`

.ll.cc:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f htwolcpre1.cc
	-rm -f htwolcpre1.h
	-rm -f htwolcpre2.cc
	-rm -f htwolcpre2.h
	-rm -f htwolcpre3.cc
	-rm -f htwolcpre3.h
	-rm -f scanner1.cc
	-rm -f scanner2.cc
	-rm -f scanner3.cc
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-binPROGRAMS installcheck-binSCRIPTS

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installcheck-binPROGRAMS \
	installcheck-binSCRIPTS installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS


hfst-twolc$(EXEEXT): hfst-twolc.sh
	cat $< | sed -e 's|BINDIR|$(bindir)|' > $@
	chmod ogu+rx hfst-twolc$(EXEEXT)

hfst-twolc-loc$(EXEEXT): hfst-twolc.sh
	cat $< | sed -e 's|BINDIR|$(abs_builddir)|' > $@
	chmod ogu+rx hfst-twolc-loc$(EXEEXT)

clean-local:
	-rm -f hfst-twolc$(EXEEXT) hfst-twolc-loc$(EXEEXT) hfst-twolc-system$(EXEEXT)

scanner1.ll: htwolcpre1.hh
scanner2.ll: htwolcpre2.hh
scanner3.ll: htwolcpre3.hh

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
